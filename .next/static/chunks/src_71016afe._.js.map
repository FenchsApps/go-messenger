{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/stickers.tsx"],"sourcesContent":["import type { SVGProps } from 'react';\n\nexport function HeartSticker(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n      <path d=\"M12 20.84C10.29 19.54 2 14.18 2 8.5C2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3C19.58 3 22 5.42 22 8.5c0 5.68-8.29 11.04-10 12.34z\" fill=\"#FF4B4B\" stroke=\"#000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </svg>\n  );\n}\n\nexport function ThumbsUpSticker(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox=\"0 0 64 64\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" role=\"img\" preserveAspectRatio=\"xMidYMid meet\" {...props}>\n        <path d=\"M51.69 25.192c1.354 0 2.783.208 4.31.675L47.4 2.675C45.875 2.208 44.443 2 43.092 2C31.754 2 25.844 16.644 14.507 16.644c-1.354 0-2.783-.209-4.31-.675L8 16.753L24.493 62h2.613l-8.261-22.738c1.523.467 2.907.574 4.259.574c11.34-.001 17.249-14.644 28.586-14.644M17.994 36.959l-6.803-18.662c7.842 1.958 13.375-2.842 18.903-7.454c4.178-3.485 8.063-6.847 12.997-6.847c.902 0 1.838.112 2.791.336l7.012 18.909a15.252 15.252 0 0 0-1.204-.047c-6.404 0-11.073 3.964-15.588 7.797c-4.146 3.52-8.063 6.846-12.998 6.846c-.902.001-3.194-.157-5.11-.878\" fill=\"currentColor\"></path>\n    </svg>\n  );\n}\n\nexport function ShopSticker(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path d=\"M4 8h16l-1.5 9H5.5L4 8z\" fill=\"#A0E8FF\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n        <path d=\"M8 8V6a4 4 0 0 1 8 0v2\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </svg>\n  );\n}\n\nexport function HomeSticker(props: SVGProps<SVGSVGElement>) {\n    return (\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n            <path d=\"M3 9l9-7 9 7v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9z\" fill=\"#90EE90\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M9 22V12h6v10\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n        </svg>\n    )\n}\n\nexport function SchoolSticker(props: SVGProps<SVGSVGElement>) {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        viewBox=\"0 0 478.68 478.68\"\n        xmlSpace=\"preserve\"\n        {...props}\n      >\n        <g id=\"_x32_8._School_2_\">\n          <g id=\"XMLID_76_\">\n            <g>\n              <g>\n                <polygon\n                  style={{ fill: '#F2D59F' }}\n                  points=\"468.68,255.61 468.68,463.15 376.95,463.15 376.95,255.6 468.67,255.6     \"\n                />\n              </g>\n              <g>\n                <polygon\n                  style={{ fill: '#8ECAC1' }}\n                  points=\"416.91,186.8 468.67,255.6 376.95,255.6 376.95,186.8     \"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#F2D59F' }}\n                  d=\"M376.95,255.6v207.55h-91.74v-100.4h-45.87h-45.87v100.4h-91.74V255.6v-68.8L239.34,118      l137.61,68.8V255.6z M261.92,205.41c0-12.47-10.11-22.58-22.58-22.58s-22.58,10.11-22.58,22.58s10.11,22.58,22.58,22.58      S261.92,217.88,261.92,205.41z\"\n                />\n              </g>\n              <g>\n                <polygon\n                  style={{ fill: '#FF7124' }}\n                  points=\"326.06,15.53 294.99,41.85 326.06,68.17 239.34,68.17 239.34,15.53     \"\n                />\n              </g>\n              <g>\n                <rect x=\"239.34\" y=\"362.75\" style={{ fill: '#FF7124' }} width=\"45.87\" height=\"100.4\" />\n              </g>\n              <g>\n                <circle style={{ fill: '#E6B263' }} cx=\"239.34\" cy=\"205.41\" r=\"22.58\" />\n              </g>\n              <g>\n                <rect x=\"193.47\" y=\"362.75\" style={{ fill: '#FF7124' }} width=\"45.87\" height=\"100.4\" />\n              </g>\n              <g>\n                <polygon\n                  style={{ fill: '#F2D59F' }}\n                  points=\"101.73,255.6 101.73,463.15 10,463.15 10,255.61 10.01,255.6     \"\n                />\n              </g>\n              <g>\n                <polygon\n                  style={{ fill: '#8ECAC1' }}\n                  points=\"101.73,186.8 101.73,255.6 10.01,255.6 61.77,186.8     \"\n                />\n              </g>\n            </g>\n            <g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M376.95,473.15h-91.74c-5.522,0-10-4.477-10-10c0-5.523,4.478-10,10-10h91.74      c5.522,0,10,4.477,10,10C386.95,468.673,382.473,473.15,376.95,473.15z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M193.47,473.15h-91.74c-5.522,0-10-4.477-10-10c0-5.523,4.478-10,10-10h91.74      c5.522,0,10,4.477,10,10C203.47,468.673,198.992,473.15,193.47,473.15z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M101.729,473.15H10c-5.523,0-10-4.477-10-10V255.61c0-5.523,4.477-10,10-10      c5.522,0,10,4.477,10,10v197.54h81.729c5.522,0,10,4.477,10,10C111.729,468.673,107.252,473.15,101.729,473.15z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M101.729,265.6H10.01c-5.522,0-10-4.477-10-10c0-5.523,4.478-10,10-10h91.72      c5.522,0,10,4.477,10,10C111.729,261.122,107.252,265.6,101.729,265.6z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M468.67,265.6h-91.72c-5.522,0-10-4.477-10-10c0-5.523,4.478-10,10-10h91.72      c5.522,0,10,4.477,10,10C478.67,261.122,474.192,265.6,468.67,265.6z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M468.68,473.15H376.95c-5.522,0-10-4.477-10-10c0-5.523,4.478-10,10-10h81.729V255.61      c0-5.523,4.478-10,10-10c5.522,0,10,4.477,10,10v207.54C478.68,468.673,474.202,473.15,468.68,473.15z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M285.21,472.15h-91.74c-4.971,0-9-4.029-9-9v-100.4c0-4.971,4.029-9,9-9h91.74      c4.971,0,9,4.029,9,9v100.4C294.21,468.121,290.181,472.15,285.21,472.15z M202.47,454.15h73.74v-82.4h-73.74V454.15z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M55.87,424.57c-5.522,0-10-4.477-10-10V392.6c0-5.523,4.478-10,10-10c5.522,0,10,4.477,10,10      v21.97C65.87,420.093,61.393,424.57,55.87,424.57z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M422.81,424.57c-5.522,0-10-4.477-10-10V392.6c0-5.523,4.478-10,10-10c5.522,0,10,4.477,10,10      v21.97C432.81,420.093,428.332,424.57,422.81,424.57z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M55.87,345.09c-5.522,0-10-4.477-10-10v-21.97c0-5.523,4.478-10,10-10c5.522,0,10,4.477,10,10      v21.97C65.87,340.613,61.393,345.09,55.87,345.09z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M422.81,345.09c-5.522,0-10-4.477-10-10v-21.97c0-5.523,4.478-10,10-10c5.522,0,10,4.477,10,10      v21.97C432.81,340.613,428.332,345.09,422.81,345.09z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M147.6,394.71c-5.522,0-10-4.477-10-10v-21.96c0-5.523,4.478-10,10-10c5.522,0,10,4.477,10,10      v21.96C157.6,390.233,153.122,394.71,147.6,394.71z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M331.08,394.71c-5.522,0-10-4.477-10-10v-21.96c0-5.523,4.478-10,10-10c5.523,0,10,4.477,10,10      v21.96C341.08,390.233,336.603,394.71,331.08,394.71z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M147.6,315.23c-5.522,0-10-4.477-10-10v-21.96c0-5.523,4.478-10,10-10c5.522,0,10,4.477,10,10      v21.96C157.6,310.753,153.122,315.23,147.6,315.23z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M331.08,315.23c-5.522,0-10-4.477-10-10v-21.96c0-5.523,4.478-10,10-10c5.523,0,10,4.477,10,10      v21.96C341.08,310.753,336.603,315.23,331.08,315.23z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M239.34,315.23c-5.522,0-10-4.477-10-10v-21.96c0-5.523,4.478-10,10-10c5.523,0,10,4.477,10,10      v21.96C249.34,310.753,244.862,315.23,239.34,315.23z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M468.674,265.607c-2.639,0-5.271-1.039-7.235-3.101c-0.267-0.28-0.527-0.586-0.76-0.895      L411.92,196.8h-34.97c-5.522,0-10-4.477-10-10c0-5.523,4.478-10,10-10h39.96c3.143,0,6.102,1.477,7.991,3.988l51.684,68.698      c3.102,4.005,2.733,9.791-1.014,13.36C473.635,264.691,471.151,265.607,468.674,265.607z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M10.001,265.603c-2.478,0-4.958-0.914-6.892-2.756c-3.769-3.589-4.127-9.413-0.969-13.418      l51.639-68.64c1.89-2.511,4.849-3.988,7.991-3.988h39.96c5.522,0,10,4.477,10,10c0-5.523-4.478-10-10-10H66.76l-48.759,64.811      c-0.232,0.309-0.483,0.604-0.75,0.885C15.284,264.561,12.644,265.603,10.001,265.603z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M239.34,472.15c-4.971,0-9-4.029-9-9v-100.4c0-4.971,4.029-9,9-9s9,4.029,9,9v100.4      C248.34,468.121,244.311,472.15,239.34,472.15z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M376.95,473.15c-5.522,0-10-4.477-10-10V192.98l-127.61-63.8l-127.61,63.8V463.15      c0,5.523-4.478,10-10,10c-5.522,0-10-4.477-10-10V186.8c0-3.788,2.141-7.251,5.528-8.944l137.61-68.8      c2.814-1.407,6.129-1.407,8.943,0l137.61,68.8c3.388,1.694,5.528,5.157,5.528,8.944v276.35      C386.95,468.673,382.473,473.15,376.95,473.15z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M239.34,128c-5.522,0-10-4.477-10-10V68.17c0-5.523,4.478-10,10-10c5.523,0,10,4.477,10,10V118      C249.34,123.523,244.862,128,239.34,128z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M326.06,78.17h-86.72c-5.522,0-10-4.477-10-10V15.53c0-5.523,4.478-10,10-10h86.72      c4.195,0,7.944,2.619,9.389,6.558c1.444,3.939,0.276,8.361-2.925,11.073l-22.063,18.69l22.063,18.69      c3.201,2.712,4.369,7.134,2.925,11.073C334.004,75.551,330.255,78.17,326.06,78.17z M249.34,58.17h49.444l-10.258-8.69      c-2.243-1.9-3.536-4.69-3.536-7.63c0-2.94,1.293-5.73,3.536-7.63l10.258-8.69H249.34V58.17z\"\n                />\n              </g>\n              <g>\n                <path\n                  style={{ fill: '#5E2A41' }}\n                  d=\"M239.34,236.99c-17.413,0-31.58-14.167-31.58-31.58s14.167-31.58,31.58-31.58      s31.58,14.167,31.58,31.58S256.753,236.99,239.34,236.99z M239.34,191.83c-7.488,0-13.58,6.092-13.58,13.58      c0,7.488,6.092,13.58,13.58,13.58s13.58-6.092,13.58-13.58C252.92,197.922,246.828,191.83,239.34,191.83z\"\n                />\n              </g>\n            </g>\n          </g>\n        </g>\n</svg>\n    );\n}\n\nexport function WorkSticker(props: SVGProps<SVGSVGElement>) {\n    return (\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n            <rect x=\"2\" y=\"7\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\" fill=\"#D4A5A5\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n        </svg>\n    )\n}\n\nexport function YummySticker(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256s114.6 256 256 256zM136.5 192.9c-11.2-1.6-21.7 6.1-24.3 16.9s3.1 22.4 14.3 24.1c32.4 4.6 60.5 15.6 83.2 30.8 2.6 1.8 6-1.5 4.8-4.2-13.1-28.9-38.3-51.5-72.1-66.3c-2.3-1-4.8-1.5-7.3-1.8-2.6-.3-5.2-.2-7.7.2zm12.3 84.4c-4.4-1.1-8.9 1.1-11.1 5.1-4.4 7.6-3.1 17.1 3.2 22.9 29.5 27.2 69.8 42.9 112.9 42.9s83.4-15.7 112.9-42.9c6.3-5.8 7.6-15.3 3.2-22.9-2.2-4-6.7-6.2-11.1-5.1-53.2 13.4-110.8 13.4-163.2 0zM383.5 193c-2.6-.3-5.2-.2-7.7.2-2.5.3-4.9.8-7.3 1.8-33.8 14.8-59 37.4-72.1 66.3-1.2 2.7 2.2 6 4.8 4.2 22.7-15.2 50.8-26.2 83.2-30.8 11.2-1.6 18.2-13.3 14.3-24.1-2.6-10.8-13.1-18.4-24.3-16.9-.1 0 0 0-.1 0z\"\n        fill=\"#FFDE33\"\n      />\n    </svg>\n  );\n}\n\nexport function SleepSticker(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M256 512A256 256 0 10256 0a256 256 0 100 512zm-32-159.2l-87.3-56.7a16.1 16.1 0 01-6.7-14.2c0-5.5 2.7-10.7 7.2-13.8l87.3-56.7c11-7.1 25.3 1.2 25.3 14.2V339c0 13-14.3 21.3-25.3 14.2zM448 240H320a16 16 0 00-16 16v32a16 16 0 0016 16h128a16 16 0 0016-16v-32a16 16 0 00-16-16z\"\n        fill=\"#89B8FF\"\n      />\n    </svg>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 955, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["import type { User, Message } from './types';\nimport { HeartSticker, HomeSticker, SchoolSticker, ShopSticker, SleepSticker, ThumbsUpSticker, WorkSticker, YummySticker } from '@/components/stickers';\n\nexport const allUsers: User[] = [\n  {\n    id: 'rodion',\n    name: 'Родион',\n    avatar: 'https://placehold.co/100x100/FFDAB9/89B8FF?text=R',\n    status: 'Online',\n    phone: '79191352804',\n    password: 'GGlim0060',\n    isCreator: true,\n  },\n  {\n    id: 'sanya',\n    name: 'Саня',\n    avatar: 'https://placehold.co/100x100/FFC0CB/000000?text=S',\n    status: 'Offline',\n    phone: '79513256840',\n    password: 'savoskoBBeast',\n  },\n  {\n    id: 'mom',\n    name: 'Мама',\n    avatar: 'https://placehold.co/100x100/89B8FF/F0F8FF?text=M',\n    status: 'Online',\n    phone: '79191346438',\n    password: '110682',\n  },\n  {\n    id: 'yesenia',\n    name: 'Есения',\n    avatar: 'https://placehold.co/100x100/98FB98/000000?text=Y',\n    status: 'Online',\n    phone: '79191323436',\n    password: 'glim0060',\n  },\n];\n\nexport const messages: Message[] = [];\n\nexport const stickers = [\n  { id: 'heart', component: HeartSticker, hint: 'heart' },\n  { id: 'like', component: ThumbsUpSticker, hint: 'thumbs up' },\n  { id: 'shop', component: ShopSticker, hint: 'shopping bag' },\n  { id: 'home', component: HomeSticker, hint: 'home' },\n  { id: 'school', component: SchoolSticker, hint: 'school' },\n  { id: 'work', component: WorkSticker, hint: 'work' },\n  { id: 'yummy', component: YummySticker, hint: 'yummy' },\n  { id: 'sleep', component: SleepSticker, hint: 'sleeping' },\n];\n"],"names":[],"mappings":";;;;;AACA;;AAEO,MAAM,WAAmB;IAC9B;QACE,IAAI;QACJ,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,OAAO;QACP,UAAU;QACV,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,OAAO;QACP,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,OAAO;QACP,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,OAAO;QACP,UAAU;IACZ;CACD;AAEM,MAAM,WAAsB,EAAE;AAE9B,MAAM,WAAW;IACtB;QAAE,IAAI;QAAS,WAAW,iIAAA,CAAA,eAAY;QAAE,MAAM;IAAQ;IACtD;QAAE,IAAI;QAAQ,WAAW,iIAAA,CAAA,kBAAe;QAAE,MAAM;IAAY;IAC5D;QAAE,IAAI;QAAQ,WAAW,iIAAA,CAAA,cAAW;QAAE,MAAM;IAAe;IAC3D;QAAE,IAAI;QAAQ,WAAW,iIAAA,CAAA,cAAW;QAAE,MAAM;IAAO;IACnD;QAAE,IAAI;QAAU,WAAW,iIAAA,CAAA,gBAAa;QAAE,MAAM;IAAS;IACzD;QAAE,IAAI;QAAQ,WAAW,iIAAA,CAAA,cAAW;QAAE,MAAM;IAAO;IACnD;QAAE,IAAI;QAAS,WAAW,iIAAA,CAAA,eAAY;QAAE,MAAM;IAAQ;IACtD;QAAE,IAAI;QAAS,WAAW,iIAAA,CAAA,eAAY;QAAE,MAAM;IAAW;CAC1D","debugId":null}},
    {"offset": {"line": 1049, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-mobile.tsx"],"sourcesContent":["import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"],"names":[],"mappings":";;;AAAA;;;AAEA,MAAM,oBAAoB;AAEnB,SAAS;;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAuB;IAEpE,CAAA,GAAA,6JAAA,CAAA,YAAe,AAAD;iCAAE;YACd,MAAM,MAAM,OAAO,UAAU,CAAC,CAAC,YAAY,EAAE,oBAAoB,EAAE,GAAG,CAAC;YACvE,MAAM;kDAAW;oBACf,YAAY,OAAO,UAAU,GAAG;gBAClC;;YACA,IAAI,gBAAgB,CAAC,UAAU;YAC/B,YAAY,OAAO,UAAU,GAAG;YAChC;yCAAO,IAAM,IAAI,mBAAmB,CAAC,UAAU;;QACjD;gCAAG,EAAE;IAEL,OAAO,CAAC,CAAC;AACX;GAdgB","debugId":null}},
    {"offset": {"line": 1086, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;;AAGb,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,qKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1150, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/icons.tsx"],"sourcesContent":["import type { SVGProps } from 'react';\n\nexport function PigeonIcon(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      version=\"1.0\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 1280.000000 904.000000\"\n      preserveAspectRatio=\"xMidYMid meet\"\n      {...props}\n    >\n      <g\n        transform=\"translate(0.000000,904.000000) scale(0.100000,-0.100000)\"\n        fill=\"currentColor\"\n        stroke=\"none\"\n      >\n        <path d=\"M5680 9030 c-793 -43 -1226 -193 -1437 -500 -124 -182 -182 -400 -190 -721 -6 -214 7 -291 72 -421 74 -146 133 -216 525 -613 302 -306 372 -382 424 -459 67 -99 0 -87 -199 36 -119 74 -336 227 -655 462 -505 372 -741 527 -1005 661 -238 121 -407 173 -585 182 -112 5 -193 -8 -280 -45 -179 -77 -391 -348 -533 -682 -66 -155 -111 -303 -162 -531 -25 -112 -61 -255 -80 -318 -19 -63 -34 -115 -32 -117 6 -7 233 -26 405 -34 217 -10 303 -29 427 -93 152 -79 279 -200 430 -412 140 -195 186 -338 136 -419 -27 -44 -99 -80 -201 -102 -84 -18 -265 -21 -805 -14 -269 3 -339 1 -440 -14 -563 -82 -950 -302 -1201 -681 -209 -314 -328 -785 -284 -1122 43 -276 139 -537 308 -788 114 -170 197 -270 352 -426 642 -646 1678 -1169 2935 -1483 838 -209 1980 -354 2940 -372 430 -9 716 15 825 69 43 21 45 24 44 63 -2 104 -248 440 -675 919 -436 490 -679 782 -679 816 0 12 93 28 226 39 243 19 730 30 1374 30 1398 0 2430 -43 2550 -105 100 -52 173 27 231 252 82 314 329 771 816 1513 324 494 553 889 553 956 0 33 -37 37 -186 20 -145 -17 -249 -37 -505 -95 -97 -22 -239 -49 -315 -60 -800 -115 -2052 -51 -2232 113 -32 29 -36 39 -35 76 3 60 43 122 142 220 392 389 1577 987 2636 1332 83 26 294 89 470 139 550 155 983 305 1010 348 32 52 -470 347 -1310 769 -396 199 -627 321 -855 452 -171 98 -525 266 -865 412 -951 407 -1723 618 -2590 708 -368 38 -1143 59 -1495 40z m705 -455 c741 -58 1354 -180 2045 -407 604 -198 1384 -506 1608 -636 134 -77 429 -199 856 -353 425 -154 740 -295 796 -355 l25 -26 -25 -20 c-58 -49 -325 -147 -595 -219 -342 -92 -451 -124 -660 -194 -1208 -403 -2260 -1103 -2452 -1632 -12 -34 -18 -77 -17 -143 0 -80 4 -104 26 -150 155 -335 707 -593 1369 -640 172 -12 286 -8 529 21 382 45 671 102 888 175 89 31 173 54 185 52 42 -6 34 -20 -201 -361 -140 -204 -329 -548 -446 -812 -41 -93 -106 -242 -145 -330 l-70 -160 -58 -6 c-32 -4 -231 -9 -443 -13 -212 -4 -682 -13 -1045 -21 -1176 -26 -1928 -17 -2264 25 -310 40 -376 61 -806 263 -211 99 -258 115 -279 98 -71 -59 106 -451 425 -942 107 -166 194 -289 433 -614 146 -199 365 -526 400 -597 53 -109 16 -129 -254 -136 -258 -6 -553 19 -1030 89 -836 121 -1475 275 -2085 501 -1289 478 -2216 1143 -2525 1812 -46 99 -94 247 -110 342 -20 111 -9 301 23 397 122 373 551 631 1232 741 255 41 422 54 855 66 677 19 840 44 926 142 73 84 89 246 40 413 -56 188 -222 482 -392 695 -154 192 -372 395 -522 486 -119 72 -162 85 -317 95 -157 10 -314 29 -319 38 -7 10 59 259 94 355 100 279 241 466 417 553 69 34 85 38 173 41 76 3 113 0 174 -17 181 -50 407 -189 731 -451 273 -221 452 -356 632 -476 688 -462 1204 -572 1359 -290 54 98 68 231 35 327 -62 181 -216 393 -460 634 -227 223 -331 354 -416 524 -85 167 -115 286 -115 449 0 118 13 181 58 275 57 121 162 231 272 287 114 57 306 101 525 120 143 12 685 3 920 -15z\" />\n        <path d=\"M2461 6938 c-98 -17 -171 -119 -171 -240 0 -151 90 -278 198 -278 114 0 214 120 229 276 15 158 -103 269 -256 242z\" />\n      </g>\n    </svg>\n  );\n}"],"names":[],"mappings":";;;;;AAEO,SAAS,WAAW,KAA8B;IACvD,qBACE,6LAAC;QACC,SAAQ;QACR,OAAM;QACN,OAAM;QACN,QAAO;QACP,SAAQ;QACR,qBAAoB;QACnB,GAAG,KAAK;kBAET,cAAA,6LAAC;YACC,WAAU;YACV,MAAK;YACL,QAAO;;8BAEP,6LAAC;oBAAK,GAAE;;;;;;8BACR,6LAAC;oBAAK,GAAE;;;;;;;;;;;;;;;;;AAIhB;KArBgB","debugId":null}},
    {"offset": {"line": 1207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 1237, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 1285, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/contact-list.tsx"],"sourcesContent":["import type { User } from '@/lib/types';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { cn } from '@/lib/utils';\nimport { PigeonIcon } from './icons';\nimport { Button } from './ui/button';\nimport { LogOut, Crown } from 'lucide-react';\nimport { formatDistanceToNow } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport { Skeleton } from './ui/skeleton';\nimport { Badge } from './ui/badge';\n\n\ninterface ContactListProps {\n  users: User[];\n  selectedUserId: string | null;\n  onSelectUser: (userId: string) => void;\n  onLogout: () => void;\n  isLoading: boolean;\n}\n\nexport function ContactList({ users, selectedUserId, onSelectUser, onLogout, isLoading }: ContactListProps) {\n  return (\n    <div className=\"flex flex-col h-full bg-card border-r\">\n      <div className=\"p-4 border-b\">\n        <div className=\"flex items-center gap-3\">\n          <PigeonIcon className=\"h-8 w-8 text-primary\" />\n          <h1 className=\"text-2xl font-bold\">Go Messenger</h1>\n        </div>\n      </div>\n      <div className=\"flex-1 overflow-y-auto\">\n        <nav className=\"p-2 space-y-1\">\n          {isLoading ? (\n            Array.from({length: 5}).map((_, i) => (\n                <div key={i} className=\"flex items-center gap-3 p-3\">\n                    <Skeleton className=\"h-10 w-10 rounded-full\" />\n                    <div className=\"flex-1 space-y-2\">\n                        <Skeleton className=\"h-4 w-3/4\" />\n                        <Skeleton className=\"h-3 w-1/2\" />\n                    </div>\n                </div>\n            ))\n          ) : (\n            users.map((user) => (\n              <button\n                key={user.id}\n                onClick={() => onSelectUser(user.id)}\n                className={cn(\n                  'flex items-center w-full gap-3 p-2 rounded-lg text-left transition-colors',\n                  selectedUserId === user.id ? 'bg-accent' : 'hover:bg-accent/50'\n                )}\n              >\n                <div className=\"relative\">\n                  <Avatar className=\"h-10 w-10 border-2 border-background\">\n                    <AvatarImage src={user.avatar} alt={user.name} />\n                    <AvatarFallback>{user.name.charAt(0)}</AvatarFallback>\n                  </Avatar>\n                  <span\n                    className={cn(\n                      'absolute bottom-0 right-0 block h-2.5 w-2.5 rounded-full border-2 border-card',\n                      {\n                        'bg-green-500': user.status === 'Online',\n                        'bg-gray-400': user.status === 'Offline',\n                      }\n                    )}\n                  />\n                </div>\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center gap-2\">\n                    <p className=\"font-semibold text-base\">{user.name}</p>\n                    {user.isCreator && (\n                        <Badge variant=\"secondary\" className=\"h-5 text-xs px-1.5\">\n                            <Crown className=\"w-3 h-3 mr-1\" />\n                            Создатель\n                        </Badge>\n                    )}\n                  </div>\n                  <p className=\"text-xs text-muted-foreground truncate\">\n                    {user.status === 'Online' ? 'В сети' : \n                      user.lastSeen ? `Был(а) ${formatDistanceToNow(new Date(user.lastSeen), { addSuffix: true, locale: ru })}` : 'Не в сети'}\n                  </p>\n                </div>\n              </button>\n            ))\n          )}\n        </nav>\n      </div>\n      <div className=\"p-4 border-t\">\n          <Button variant=\"outline\" className=\"w-full\" onClick={onLogout}>\n              <LogOut className=\"mr-2 h-4 w-4\" />\n              Выйти\n          </Button>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWO,SAAS,YAAY,EAAE,KAAK,EAAE,cAAc,EAAE,YAAY,EAAE,QAAQ,EAAE,SAAS,EAAoB;IACxG,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,8HAAA,CAAA,aAAU;4BAAC,WAAU;;;;;;sCACtB,6LAAC;4BAAG,WAAU;sCAAqB;;;;;;;;;;;;;;;;;0BAGvC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACZ,YACC,MAAM,IAAI,CAAC;wBAAC,QAAQ;oBAAC,GAAG,GAAG,CAAC,CAAC,GAAG,kBAC5B,6LAAC;4BAAY,WAAU;;8CACnB,6LAAC,uIAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;8CACpB,6LAAC;oCAAI,WAAU;;sDACX,6LAAC,uIAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;sDACpB,6LAAC,uIAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;;;;;;;;2BAJlB;;;;oCASd,MAAM,GAAG,CAAC,CAAC,qBACT,6LAAC;4BAEC,SAAS,IAAM,aAAa,KAAK,EAAE;4BACnC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6EACA,mBAAmB,KAAK,EAAE,GAAG,cAAc;;8CAG7C,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,qIAAA,CAAA,SAAM;4CAAC,WAAU;;8DAChB,6LAAC,qIAAA,CAAA,cAAW;oDAAC,KAAK,KAAK,MAAM;oDAAE,KAAK,KAAK,IAAI;;;;;;8DAC7C,6LAAC,qIAAA,CAAA,iBAAc;8DAAE,KAAK,IAAI,CAAC,MAAM,CAAC;;;;;;;;;;;;sDAEpC,6LAAC;4CACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iFACA;gDACE,gBAAgB,KAAK,MAAM,KAAK;gDAChC,eAAe,KAAK,MAAM,KAAK;4CACjC;;;;;;;;;;;;8CAIN,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAE,WAAU;8DAA2B,KAAK,IAAI;;;;;;gDAChD,KAAK,SAAS,kBACX,6LAAC,oIAAA,CAAA,QAAK;oDAAC,SAAQ;oDAAY,WAAU;;sEACjC,6LAAC,uMAAA,CAAA,QAAK;4DAAC,WAAU;;;;;;wDAAiB;;;;;;;;;;;;;sDAK5C,6LAAC;4CAAE,WAAU;sDACV,KAAK,MAAM,KAAK,WAAW,WAC1B,KAAK,QAAQ,GAAG,CAAC,OAAO,EAAE,CAAA,GAAA,sJAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,KAAK,KAAK,QAAQ,GAAG;gDAAE,WAAW;gDAAM,QAAQ,+IAAA,CAAA,KAAE;4CAAC,IAAI,GAAG;;;;;;;;;;;;;2BAlC7G,KAAK,EAAE;;;;;;;;;;;;;;;0BA0CtB,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAU,WAAU;oBAAS,SAAS;;sCAClD,6LAAC,6MAAA,CAAA,SAAM;4BAAC,WAAU;;;;;;wBAAiB;;;;;;;;;;;;;;;;;;AAMjD;KA1EgB","debugId":null}},
    {"offset": {"line": 1551, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/chat-header.tsx"],"sourcesContent":["import type { User } from '@/lib/types';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft, Crown, Phone } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { formatDistanceToNow } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport { Badge } from './ui/badge';\n\n\ninterface ChatHeaderProps {\n  user: User;\n  isMobile: boolean;\n  onBack: () => void;\n  onCall: () => void;\n}\n\nexport function ChatHeader({ user, isMobile, onBack, onCall }: ChatHeaderProps) {\n  return (\n    <div className=\"flex items-center justify-between p-2 md:p-4 border-b\">\n      <div className=\"flex items-center gap-3\">\n        {isMobile && (\n          <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onBack}>\n            <ArrowLeft className=\"h-6 w-6\" />\n          </Button>\n        )}\n        <Avatar className=\"h-10 w-10 border-2 border-white\">\n          <AvatarImage src={user.avatar} alt={user.name} />\n          <AvatarFallback>{user.name.charAt(0)}</AvatarFallback>\n        </Avatar>\n        <div className=\"flex flex-col\">\n            <div className=\"flex items-center gap-2\">\n                <span className=\"font-bold text-lg\">{user.name}</span>\n                {user.isCreator && (\n                    <Badge variant=\"secondary\" className=\"h-5 text-xs px-1.5\">\n                        <Crown className=\"w-3 h-3 mr-1\" />\n                        Создатель\n                    </Badge>\n                )}\n            </div>\n          <div className=\"flex items-center gap-1.5\">\n            <span\n              className={cn('h-2 w-2 rounded-full', {\n                'bg-green-500': user.status === 'Online',\n                'bg-gray-400': user.status === 'Offline',\n              })}\n            />\n            <span className=\"text-xs text-muted-foreground\">\n               {user.status === 'Online' ? 'В сети' : \n                    user.lastSeen ? `Был(а) в сети ${formatDistanceToNow(new Date(user.lastSeen), { addSuffix: true, locale: ru })}` : 'Не в сети'}\n            </span>\n          </div>\n        </div>\n      </div>\n      <Button variant=\"ghost\" size=\"icon\" onClick={onCall}>\n        <Phone className=\"h-6 w-6\" />\n      </Button>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;AAUO,SAAS,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAmB;IAC5E,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;oBACZ,0BACC,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;wBAAO,WAAU;wBAAY,SAAS;kCACjE,cAAA,6LAAC,mNAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;;;;;;kCAGzB,6LAAC,qIAAA,CAAA,SAAM;wBAAC,WAAU;;0CAChB,6LAAC,qIAAA,CAAA,cAAW;gCAAC,KAAK,KAAK,MAAM;gCAAE,KAAK,KAAK,IAAI;;;;;;0CAC7C,6LAAC,qIAAA,CAAA,iBAAc;0CAAE,KAAK,IAAI,CAAC,MAAM,CAAC;;;;;;;;;;;;kCAEpC,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAI,WAAU;;kDACX,6LAAC;wCAAK,WAAU;kDAAqB,KAAK,IAAI;;;;;;oCAC7C,KAAK,SAAS,kBACX,6LAAC,oIAAA,CAAA,QAAK;wCAAC,SAAQ;wCAAY,WAAU;;0DACjC,6LAAC,uMAAA,CAAA,QAAK;gDAAC,WAAU;;;;;;4CAAiB;;;;;;;;;;;;;0CAKhD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,wBAAwB;4CACpC,gBAAgB,KAAK,MAAM,KAAK;4CAChC,eAAe,KAAK,MAAM,KAAK;wCACjC;;;;;;kDAEF,6LAAC;wCAAK,WAAU;kDACZ,KAAK,MAAM,KAAK,WAAW,WACvB,KAAK,QAAQ,GAAG,CAAC,cAAc,EAAE,CAAA,GAAA,sJAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,KAAK,KAAK,QAAQ,GAAG;4CAAE,WAAW;4CAAM,QAAQ,+IAAA,CAAA,KAAE;wCAAC,IAAI,GAAG;;;;;;;;;;;;;;;;;;;;;;;;0BAKjI,6LAAC,qIAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAQ,MAAK;gBAAO,SAAS;0BAC3C,cAAA,6LAAC,uMAAA,CAAA,QAAK;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAIzB;KA1CgB","debugId":null}},
    {"offset": {"line": 1735, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1963, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/message-menu.tsx"],"sourcesContent":["import {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { Button } from './ui/button';\nimport { MoreHorizontal, Forward, Edit, Trash2 } from 'lucide-react';\nimport type { Message } from '@/lib/types';\n\ninterface MessageMenuProps {\n  message: Message;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onForward: () => void;\n  isOtherUser?: boolean;\n}\n\nexport function MessageMenu({ message, onEdit, onDelete, onForward, isOtherUser }: MessageMenuProps) {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\">\n          <MoreHorizontal className=\"h-4 w-4\" />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent>\n        {onForward && (\n            <DropdownMenuItem onClick={onForward}>\n                <Forward className=\"mr-2 h-4 w-4\" />\n                <span>Переслать</span>\n            </DropdownMenuItem>\n        )}\n        {!isOtherUser && onEdit && message.type === 'text' && (\n          <DropdownMenuItem onClick={onEdit}>\n            <Edit className=\"mr-2 h-4 w-4\" />\n            <span>Редактировать</span>\n          </DropdownMenuItem>\n        )}\n        {!isOtherUser && onDelete && (\n          <DropdownMenuItem onClick={onDelete} className=\"text-red-500\">\n            <Trash2 className=\"mr-2 h-4 w-4\" />\n            <span>Удалить</span>\n          </DropdownMenuItem>\n        )}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;;;;;AAWO,SAAS,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAoB;IACjG,qBACE,6LAAC,+IAAA,CAAA,eAAY;;0BACX,6LAAC,+IAAA,CAAA,sBAAmB;gBAAC,OAAO;0BAC1B,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAQ,MAAK;oBAAO,WAAU;8BAC5C,cAAA,6LAAC,mNAAA,CAAA,iBAAc;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAG9B,6LAAC,+IAAA,CAAA,sBAAmB;;oBACjB,2BACG,6LAAC,+IAAA,CAAA,mBAAgB;wBAAC,SAAS;;0CACvB,6LAAC,2MAAA,CAAA,UAAO;gCAAC,WAAU;;;;;;0CACnB,6LAAC;0CAAK;;;;;;;;;;;;oBAGb,CAAC,eAAe,UAAU,QAAQ,IAAI,KAAK,wBAC1C,6LAAC,+IAAA,CAAA,mBAAgB;wBAAC,SAAS;;0CACzB,6LAAC,8MAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;0CAChB,6LAAC;0CAAK;;;;;;;;;;;;oBAGT,CAAC,eAAe,0BACf,6LAAC,+IAAA,CAAA,mBAAgB;wBAAC,SAAS;wBAAU,WAAU;;0CAC7C,6LAAC,6MAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;0CAClB,6LAAC;0CAAK;;;;;;;;;;;;;;;;;;;;;;;;AAMlB;KA9BgB","debugId":null}},
    {"offset": {"line": 2100, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/chat-messages.tsx"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport { cn } from '@/lib/utils';\nimport type { Message, User } from '@/lib/types';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport Image from 'next/image';\nimport { format } from 'date-fns';\nimport { MessageMenu } from './message-menu';\nimport { stickers } from '@/lib/data';\nimport { PhoneMissed, PhoneIncoming, PhoneOutgoing, PhoneOff } from 'lucide-react';\n\ninterface ChatMessagesProps {\n  messages: Message[];\n  currentUser: User;\n  chatPartner: User;\n  onEdit: (message: Message) => void;\n  onDelete: (messageId: string) => void;\n  onForward: (message: Message) => void;\n}\n\nexport function ChatMessages({ messages, currentUser, chatPartner, onEdit, onDelete, onForward }: ChatMessagesProps) {\n  const scrollAreaRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollAreaRef.current) {\n      scrollAreaRef.current.scrollTop = scrollAreaRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const renderCallMessage = (message: Message) => {\n    const isCurrentUser = message.senderId === currentUser.id;\n    let Icon = PhoneOutgoing;\n    let text = message.text;\n\n    if (message.callInfo?.status === 'missed') {\n        Icon = PhoneMissed;\n        text = isCurrentUser ? `Вы пропустили звонок от ${chatPartner.name}` : `${currentUser.name} пропустил(а) звонок`;\n    } else if (message.callInfo?.status === 'declined') {\n        Icon = PhoneOff;\n        text = isCurrentUser ? `${chatPartner.name} отклонил(а) звонок` : 'Вы отклонили звонок';\n    } else if (message.callInfo?.status === 'answered') {\n        Icon = isCurrentUser ? PhoneOutgoing : PhoneIncoming;\n        const duration = message.callInfo.duration;\n        const minutes = Math.floor(duration / 60);\n        const seconds = duration % 60;\n        text = `Звонок завершен • ${minutes > 0 ? `${minutes} мин ` : ''}${seconds} сек`;\n    }\n    \n    return (\n        <div className=\"flex items-center justify-center gap-2 text-sm text-muted-foreground my-2\">\n            <Icon className=\"h-4 w-4\" />\n            <span>{text}</span>\n            <span className=\"text-xs\">\n                 {message.timestamp && format(new Date(message.timestamp), 'HH:mm')}\n            </span>\n        </div>\n    )\n  }\n\n  return (\n    <div ref={scrollAreaRef} className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n      {messages.map((message, index) => {\n        if(message.type === 'call') {\n            return <div key={message.id}>{renderCallMessage(message)}</div>;\n        }\n\n        const isCurrentUser = message.senderId === currentUser.id;\n        const sender = isCurrentUser ? currentUser : chatPartner;\n        const showAvatar = !isCurrentUser && (index === 0 || messages[index - 1].senderId !== message.senderId);\n\n        const StickerComponent = message.stickerId ? stickers.find(s => s.id === message.stickerId)?.component : null;\n\n        return (\n          <div\n            key={message.id}\n            className={cn('group flex items-end gap-2', {\n              'justify-end': isCurrentUser,\n              'justify-start': !isCurrentUser,\n            })}\n          >\n             {isCurrentUser && (\n              <div className=\"opacity-0 group-hover:opacity-100 transition-opacity\">\n                <MessageMenu\n                  message={message}\n                  onEdit={() => onEdit(message)}\n                  onDelete={() => onDelete(message.id)}\n                  onForward={() => onForward(message)}\n                />\n              </div>\n            )}\n            {!isCurrentUser && (\n              <div className=\"w-8\">\n                {showAvatar && (\n                  <Avatar className=\"h-8 w-8\">\n                    <AvatarImage src={sender.avatar} alt={sender.name} />\n                    <AvatarFallback>{sender.name.charAt(0)}</AvatarFallback>\n                  </Avatar>\n                )}\n              </div>\n            )}\n            <div\n              className={cn(\n                'relative max-w-sm rounded-2xl px-4 py-2 transition-all duration-300 animate-in fade-in-25 slide-in-from-bottom-4',\n                {\n                  'bg-primary text-primary-foreground rounded-br-sm': isCurrentUser && message.type === 'text',\n                  'bg-card text-card-foreground rounded-bl-sm': !isCurrentUser && message.type === 'text',\n                },\n                 message.type === 'sticker' && 'p-1 bg-transparent',\n                 message.type === 'gif' && 'p-0 bg-transparent rounded-lg overflow-hidden'\n              )}\n            >\n              {message.forwardedFrom && (\n                <div className=\"border-l-2 border-blue-300 pl-2 mb-1 text-xs opacity-80\">\n                  <p className=\"font-bold\">Переслано от {message.forwardedFrom.name}</p>\n                  <p>{message.forwardedFrom.text}</p>\n                </div>\n              )}\n               {message.type === 'gif' && message.gifUrl && (\n                <Image\n                  src={message.gifUrl}\n                  alt=\"GIF\"\n                  width={250}\n                  height={200}\n                  className=\"max-w-full h-auto\"\n                  unoptimized // Important for GIFs\n                />\n              )}\n              {message.type === 'sticker' && StickerComponent && (\n                <div className=\"w-32 h-32\">\n                   <StickerComponent />\n                </div>\n              )}\n               {message.type === 'text' && message.text && (\n                <p className=\"whitespace-pre-wrap\">{message.text}</p>\n              )}\n              <div className=\"flex items-center justify-end gap-2 text-xs text-muted-foreground/50 pt-1\">\n                 {message.edited && <span className=\"text-xs\">(изм.)</span>}\n                <span className=\"opacity-0 group-hover:opacity-100 transition-opacity\">\n                    {message.timestamp && format(new Date(message.timestamp), 'HH:mm')}\n                </span>\n              </div>\n            </div>\n             {!isCurrentUser && (\n               <div className=\"opacity-0 group-hover:opacity-100 transition-opacity\">\n                <MessageMenu\n                  message={message}\n                  isOtherUser={true}\n                  onForward={() => onForward(message)}\n                />\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2395, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2430, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2478, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sticker-panel.tsx"],"sourcesContent":["import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Button } from '@/components/ui/button';\nimport { Smile } from 'lucide-react';\nimport { stickers } from '@/lib/data';\n\ninterface StickerPanelProps {\n  onStickerSelect: (stickerId: string) => void;\n}\n\nexport function StickerPanel({ onStickerSelect }: StickerPanelProps) {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button variant=\"ghost\" size=\"icon\">\n          <Smile className=\"h-6 w-6 text-muted-foreground\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-full max-w-[250px] p-2 border-0 bg-background/80 backdrop-blur-sm\">\n        <div className=\"grid grid-cols-4 gap-2\">\n          {stickers.map((sticker) => (\n            <button\n              key={sticker.id}\n              onClick={() => onStickerSelect(sticker.id)}\n              className=\"p-1 rounded-md hover:bg-accent transition-colors focus:outline-none focus:ring-2 focus:ring-ring\"\n              aria-label={sticker.hint}\n            >\n              <sticker.component className=\"w-10 h-10\" />\n            </button>\n          ))}\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAMO,SAAS,aAAa,EAAE,eAAe,EAAqB;IACjE,qBACE,6LAAC,sIAAA,CAAA,UAAO;;0BACN,6LAAC,sIAAA,CAAA,iBAAc;gBAAC,OAAO;0BACrB,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAQ,MAAK;8BAC3B,cAAA,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGrB,6LAAC,sIAAA,CAAA,iBAAc;gBAAC,WAAU;0BACxB,cAAA,6LAAC;oBAAI,WAAU;8BACZ,qHAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,CAAC,wBACb,6LAAC;4BAEC,SAAS,IAAM,gBAAgB,QAAQ,EAAE;4BACzC,WAAU;4BACV,cAAY,QAAQ,IAAI;sCAExB,cAAA,6LAAC,QAAQ,SAAS;gCAAC,WAAU;;;;;;2BALxB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;AAY7B;KAxBgB","debugId":null}},
    {"offset": {"line": 2565, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["// @ts-nocheck\n'use server';\nimport { filterProfanity } from '@/ai/flows/filter-profanity';\nimport { db, storage } from '@/lib/firebase';\nimport { addDoc, collection, serverTimestamp, doc, updateDoc, deleteDoc, getDoc, setDoc } from 'firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\n\nexport async function getFilteredMessage(text: string) {\n  if (!text.trim()) {\n    return { error: 'Message cannot be empty', data: null };\n  }\n\n  try {\n    const { filteredText } = await filterProfanity({ text });\n    return {\n      error: null,\n      data: {\n        id: crypto.randomUUID(),\n        text: filteredText,\n      }\n    };\n  } catch (error) {\n    console.error('Error filtering profanity:', error);\n    // Fallback to original text if AI fails\n    return {\n      error: 'Failed to process message with AI',\n      data: {\n        id: crypto.randomUUID(),\n        text: text,\n      }\n    };\n  }\n}\n\nfunction getChatId(userId1: string, userId2: string) {\n    return [userId1, userId2].sort().join('_');\n}\n\nexport async function sendMessage(senderId: string, recipientId: string, text: string, forwardedFrom?: { name: string, text: string }, callInfo?: { status: 'answered' | 'declined' | 'missed', duration?: number }) {\n    if (!text.trim() && !callInfo) {\n        return { error: 'Message cannot be empty' };\n    }\n    \n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text,\n            timestamp: serverTimestamp(),\n            type: callInfo ? 'call' : 'text',\n            edited: false,\n            forwardedFrom: forwardedFrom || null,\n            callInfo: callInfo || null,\n        });\n        return { error: null, data: { id: docRef.id, text } };\n    } catch (error) {\n        console.error(\"Error sending message:\", error);\n        return { error: 'Failed to send message' };\n    }\n}\n\nexport async function sendSticker(senderId: string, recipientId: string, stickerId: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'sticker',\n            stickerId,\n        });\n        return { error: null, data: { id: docRef.id, stickerId } };\n    } catch (error) {\n        console.error(\"Error sending sticker:\", error);\n        return { error: 'Failed to send sticker' };\n    }\n}\n\nexport async function sendGif(senderId: string, recipientId: string, gifUrl: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'gif',\n            gifUrl,\n        });\n        return { error: null, data: { id: docRef.id, gifUrl } };\n    } catch (error) {\n        console.error(\"Error sending GIF:\", error);\n        return { error: 'Failed to send GIF' };\n    }\n}\n\nexport async function searchGifs(query: string) {\n  const apiKey = process.env.GIPHY_API_KEY;\n  if (!apiKey) {\n    console.error('GIPHY API key not found.');\n    return { error: 'GIF service is not configured.' };\n  }\n  \n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURIComponent(query)}&limit=21&offset=0&rating=g&lang=en`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('GIPHY API error:', response.status, errorText);\n      return { error: 'Failed to fetch GIFs from GIPHY.' };\n    }\n    const data = await response.json();\n    const gifs = data.data.map((r: any) => ({\n      id: r.id,\n      url: r.images.fixed_height.url,\n      preview: r.images.fixed_height_small.url,\n    }));\n    return { data: gifs };\n  } catch (error) {\n    console.error('Error fetching GIFs from GIPHY:', error);\n    return { error: 'Failed to fetch GIFs.' };\n  }\n}\n\n\nexport async function editMessage(chatId: string, messageId: string, newText: string) {\n    if (!newText.trim()) {\n        return { error: \"Message can't be empty\" };\n    }\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await updateDoc(messageRef, {\n            text: newText,\n            edited: true,\n        });\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error editing message:\", error);\n        return { error: 'Failed to edit message' };\n    }\n}\n\nexport async function deleteMessage(chatId: string, messageId: string) {\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await deleteDoc(messageRef);\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting message:\", error);\n        return { error: 'Failed to delete message' };\n    }\n}\n\n\n// WebRTC Signaling Actions\nexport async function createCallOffer(chatId: string, offer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await setDoc(callDocRef, {\n    offer,\n    status: 'ringing',\n    createdAt: serverTimestamp(),\n  });\n}\n\nexport async function createCallAnswer(chatId: string, answer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await updateDoc(callDocRef, { answer, status: 'answered' });\n}\n\nexport async function addIceCandidate(chatId: string, candidate: RTCIceCandidateInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  const callDoc = await getDoc(callDocRef);\n  if (callDoc.exists()) {\n    const data = callDoc.data();\n    const candidates = data.iceCandidates || [];\n    await updateDoc(callDocRef, {\n      iceCandidates: [...candidates, candidate],\n    });\n  }\n}\n\nexport async function updateCallStatus(\n    chatId: string, \n    status: 'declined' | 'ended' | 'answered', \n    duration?: number,\n    callerId?: string,\n    calleeId?: string,\n) {\n    const callDocRef = doc(db, 'calls', chatId);\n    const callDoc = await getDoc(callDocRef);\n\n    if (callDoc.exists()) {\n        const callData = callDoc.data();\n        if (status === 'ended' || status === 'declined') {\n            await deleteDoc(callDocRef);\n            \n            if(callerId && calleeId) {\n                let callStatus = callData.status === 'answered' ? 'answered' : (status === 'declined' ? 'declined' : 'missed');\n                let messageText = 'Звонок';\n                 if(callStatus === 'answered') {\n                    messageText = `Звонок длительностью ${duration} сек.`\n                 } else if (callStatus === 'declined') {\n                    messageText = 'Звонок отклонен'\n                 } else if (callStatus === 'missed') {\n                    messageText = 'Пропущенный звонок'\n                 }\n\n                await sendMessage(callerId, calleeId, messageText, undefined, {\n                    status: callStatus,\n                    duration: duration,\n                })\n            }\n        }\n    } else if(status === 'answered') {\n        await setDoc(callDocRef, { status }, { merge: true });\n    }\n}\n"],"names":[],"mappings":";;;;;;IAqGsB,aAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 2581, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2658, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/gif-panel.tsx"],"sourcesContent":["'use client';\nimport { useState, useTransition } from 'react';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { FileImage, Loader2 } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { searchGifs } from '@/app/actions';\nimport Image from 'next/image';\nimport { ScrollArea } from './ui/scroll-area';\n\ninterface GifPanelProps {\n  onGifSelect: (gifUrl: string) => void;\n}\n\ninterface Gif {\n  id: string;\n  url: string;\n  preview: string;\n}\n\nexport function GifPanel({ onGifSelect }: GifPanelProps) {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [gifs, setGifs] = useState<Gif[]>([]);\n  const [isPending, startTransition] = useTransition();\n  const { toast } = useToast();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleSearch = () => {\n    if (!searchQuery.trim()) return;\n\n    startTransition(async () => {\n      const result = await searchGifs(searchQuery);\n      if (result.error) {\n        toast({ title: 'Ошибка поиска GIF', description: result.error, variant: 'destructive' });\n        setGifs([]);\n      } else {\n        setGifs(result.data || []);\n      }\n    });\n  };\n\n  const handleGifClick = (gifUrl: string) => {\n    onGifSelect(gifUrl);\n    setIsOpen(false);\n    setSearchQuery('');\n    setGifs([]);\n  };\n\n  return (\n    <Popover open={isOpen} onOpenChange={setIsOpen}>\n      <PopoverTrigger asChild>\n        <Button variant=\"ghost\" size=\"icon\">\n          <FileImage className=\"h-6 w-6 text-muted-foreground\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-full max-w-sm p-2 border-0 bg-background/80 backdrop-blur-sm\">\n        <div className=\"flex gap-2 mb-2\">\n          <Input\n            placeholder=\"Поиск GIF в GIPHY...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            onKeyDown={(e) => e.key === 'Enter' && handleSearch()}\n            disabled={isPending}\n          />\n          <Button onClick={handleSearch} disabled={isPending}>\n            {isPending ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : 'Найти'}\n          </Button>\n        </div>\n        <ScrollArea className=\"h-64\">\n          <div className=\"grid grid-cols-3 gap-1\">\n            {gifs.map((gif) => (\n              <button\n                key={gif.id}\n                onClick={() => handleGifClick(gif.url)}\n                className=\"aspect-square relative focus:outline-none focus:ring-2 focus:ring-ring rounded-md overflow-hidden\"\n              >\n                <Image src={gif.preview} alt=\"gif\" layout=\"fill\" objectFit=\"cover\" unoptimized/>\n              </button>\n            ))}\n          </div>\n        </ScrollArea>\n      </PopoverContent>\n    </Popover>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AATA;;;;;;;;;;AAqBO,SAAS,SAAS,EAAE,WAAW,EAAiB;;IACrD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAC1C,MAAM,CAAC,WAAW,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD;IACjD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,eAAe;QACnB,IAAI,CAAC,YAAY,IAAI,IAAI;QAEzB,gBAAgB;YACd,MAAM,SAAS,MAAM,CAAA,GAAA,qJAAA,CAAA,aAAU,AAAD,EAAE;YAChC,IAAI,OAAO,KAAK,EAAE;gBAChB,MAAM;oBAAE,OAAO;oBAAqB,aAAa,OAAO,KAAK;oBAAE,SAAS;gBAAc;gBACtF,QAAQ,EAAE;YACZ,OAAO;gBACL,QAAQ,OAAO,IAAI,IAAI,EAAE;YAC3B;QACF;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,YAAY;QACZ,UAAU;QACV,eAAe;QACf,QAAQ,EAAE;IACZ;IAEA,qBACE,6LAAC,sIAAA,CAAA,UAAO;QAAC,MAAM;QAAQ,cAAc;;0BACnC,6LAAC,sIAAA,CAAA,iBAAc;gBAAC,OAAO;0BACrB,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAQ,MAAK;8BAC3B,cAAA,6LAAC,mNAAA,CAAA,YAAS;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGzB,6LAAC,sIAAA,CAAA,iBAAc;gBAAC,WAAU;;kCACxB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,oIAAA,CAAA,QAAK;gCACJ,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;gCAC9C,WAAW,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW;gCACvC,UAAU;;;;;;0CAEZ,6LAAC,qIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAc,UAAU;0CACtC,0BAAY,6LAAC,oNAAA,CAAA,UAAO;oCAAC,WAAU;;;;;2CAA4B;;;;;;;;;;;;kCAGhE,6LAAC,6IAAA,CAAA,aAAU;wBAAC,WAAU;kCACpB,cAAA,6LAAC;4BAAI,WAAU;sCACZ,KAAK,GAAG,CAAC,CAAC,oBACT,6LAAC;oCAEC,SAAS,IAAM,eAAe,IAAI,GAAG;oCACrC,WAAU;8CAEV,cAAA,6LAAC,gIAAA,CAAA,UAAK;wCAAC,KAAK,IAAI,OAAO;wCAAE,KAAI;wCAAM,QAAO;wCAAO,WAAU;wCAAQ,WAAW;;;;;;mCAJzE,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AAY3B;GAhEgB;;QAGuB,6JAAA,CAAA,gBAAa;QAChC,+HAAA,CAAA,WAAQ;;;KAJZ","debugId":null}},
    {"offset": {"line": 2841, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/chat-input.tsx"],"sourcesContent":["import { useRef, useState, useTransition } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Send } from 'lucide-react';\nimport { StickerPanel } from './sticker-panel';\nimport { cn } from '@/lib/utils';\nimport { GifPanel } from './gif-panel';\n\ninterface ChatInputProps {\n  onSendMessage: (text: string) => Promise<void>;\n  onSendSticker: (stickerId: string) => void;\n  onSendGif: (gifUrl: string) => void;\n}\n\nexport function ChatInput({ onSendMessage, onSendSticker, onSendGif }: ChatInputProps) {\n  const [text, setText] = useState('');\n  const [isPending, startTransition] = useTransition();\n\n  const handleSendMessage = async () => {\n    if (!text.trim() || isPending) return;\n    startTransition(async () => {\n      await onSendMessage(text);\n      setText('');\n    });\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"p-2 md:p-4 border-t bg-card\">\n      <form\n        action={handleSendMessage}\n        className=\"relative flex items-center gap-2\"\n      >\n        <StickerPanel onStickerSelect={onSendSticker} />\n        <GifPanel onGifSelect={onSendGif} />\n        <Textarea\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Написать сообщение...\"\n          className=\"min-h-[44px] max-h-40 flex-1 resize-none rounded-2xl bg-background p-3 pr-12 text-base focus-visible:ring-0 focus-visible:ring-offset-0\"\n          rows={1}\n          disabled={isPending}\n        />\n        <Button\n        type=\"submit\"\n        size=\"icon\"\n        className={cn(\n            'absolute right-2 bottom-2 h-8 w-8 rounded-full transition-transform duration-300',\n            isPending ? 'animate-spin' : ''\n        )}\n        disabled={!text.trim() || isPending}\n        >\n            <Send className=\"h-4 w-4\" />\n        </Button>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAQO,SAAS,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,SAAS,EAAkB;;IACnF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,WAAW,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD;IAEjD,MAAM,oBAAoB;QACxB,IAAI,CAAC,KAAK,IAAI,MAAM,WAAW;QAC/B,gBAAgB;YACd,MAAM,cAAc;YACpB,QAAQ;QACV;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,IAAI,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,EAAE;YACpC,EAAE,cAAc;YAChB;QACF;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,QAAQ;YACR,WAAU;;8BAEV,6LAAC,yIAAA,CAAA,eAAY;oBAAC,iBAAiB;;;;;;8BAC/B,6LAAC,qIAAA,CAAA,WAAQ;oBAAC,aAAa;;;;;;8BACvB,6LAAC,uIAAA,CAAA,WAAQ;oBACP,OAAO;oBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;oBACvC,WAAW;oBACX,aAAY;oBACZ,WAAU;oBACV,MAAM;oBACN,UAAU;;;;;;8BAEZ,6LAAC,qIAAA,CAAA,SAAM;oBACP,MAAK;oBACL,MAAK;oBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,oFACA,YAAY,iBAAiB;oBAEjC,UAAU,CAAC,KAAK,IAAI,MAAM;8BAEtB,cAAA,6LAAC,qMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;AAK5B;GAlDgB;;QAEuB,6JAAA,CAAA,gBAAa;;;KAFpC","debugId":null}},
    {"offset": {"line": 2957, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3108, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["// @ts-nocheck\n'use server';\nimport { filterProfanity } from '@/ai/flows/filter-profanity';\nimport { db, storage } from '@/lib/firebase';\nimport { addDoc, collection, serverTimestamp, doc, updateDoc, deleteDoc, getDoc, setDoc } from 'firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\n\nexport async function getFilteredMessage(text: string) {\n  if (!text.trim()) {\n    return { error: 'Message cannot be empty', data: null };\n  }\n\n  try {\n    const { filteredText } = await filterProfanity({ text });\n    return {\n      error: null,\n      data: {\n        id: crypto.randomUUID(),\n        text: filteredText,\n      }\n    };\n  } catch (error) {\n    console.error('Error filtering profanity:', error);\n    // Fallback to original text if AI fails\n    return {\n      error: 'Failed to process message with AI',\n      data: {\n        id: crypto.randomUUID(),\n        text: text,\n      }\n    };\n  }\n}\n\nfunction getChatId(userId1: string, userId2: string) {\n    return [userId1, userId2].sort().join('_');\n}\n\nexport async function sendMessage(senderId: string, recipientId: string, text: string, forwardedFrom?: { name: string, text: string }, callInfo?: { status: 'answered' | 'declined' | 'missed', duration?: number }) {\n    if (!text.trim() && !callInfo) {\n        return { error: 'Message cannot be empty' };\n    }\n    \n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text,\n            timestamp: serverTimestamp(),\n            type: callInfo ? 'call' : 'text',\n            edited: false,\n            forwardedFrom: forwardedFrom || null,\n            callInfo: callInfo || null,\n        });\n        return { error: null, data: { id: docRef.id, text } };\n    } catch (error) {\n        console.error(\"Error sending message:\", error);\n        return { error: 'Failed to send message' };\n    }\n}\n\nexport async function sendSticker(senderId: string, recipientId: string, stickerId: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'sticker',\n            stickerId,\n        });\n        return { error: null, data: { id: docRef.id, stickerId } };\n    } catch (error) {\n        console.error(\"Error sending sticker:\", error);\n        return { error: 'Failed to send sticker' };\n    }\n}\n\nexport async function sendGif(senderId: string, recipientId: string, gifUrl: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'gif',\n            gifUrl,\n        });\n        return { error: null, data: { id: docRef.id, gifUrl } };\n    } catch (error) {\n        console.error(\"Error sending GIF:\", error);\n        return { error: 'Failed to send GIF' };\n    }\n}\n\nexport async function searchGifs(query: string) {\n  const apiKey = process.env.GIPHY_API_KEY;\n  if (!apiKey) {\n    console.error('GIPHY API key not found.');\n    return { error: 'GIF service is not configured.' };\n  }\n  \n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURIComponent(query)}&limit=21&offset=0&rating=g&lang=en`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('GIPHY API error:', response.status, errorText);\n      return { error: 'Failed to fetch GIFs from GIPHY.' };\n    }\n    const data = await response.json();\n    const gifs = data.data.map((r: any) => ({\n      id: r.id,\n      url: r.images.fixed_height.url,\n      preview: r.images.fixed_height_small.url,\n    }));\n    return { data: gifs };\n  } catch (error) {\n    console.error('Error fetching GIFs from GIPHY:', error);\n    return { error: 'Failed to fetch GIFs.' };\n  }\n}\n\n\nexport async function editMessage(chatId: string, messageId: string, newText: string) {\n    if (!newText.trim()) {\n        return { error: \"Message can't be empty\" };\n    }\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await updateDoc(messageRef, {\n            text: newText,\n            edited: true,\n        });\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error editing message:\", error);\n        return { error: 'Failed to edit message' };\n    }\n}\n\nexport async function deleteMessage(chatId: string, messageId: string) {\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await deleteDoc(messageRef);\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting message:\", error);\n        return { error: 'Failed to delete message' };\n    }\n}\n\n\n// WebRTC Signaling Actions\nexport async function createCallOffer(chatId: string, offer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await setDoc(callDocRef, {\n    offer,\n    status: 'ringing',\n    createdAt: serverTimestamp(),\n  });\n}\n\nexport async function createCallAnswer(chatId: string, answer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await updateDoc(callDocRef, { answer, status: 'answered' });\n}\n\nexport async function addIceCandidate(chatId: string, candidate: RTCIceCandidateInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  const callDoc = await getDoc(callDocRef);\n  if (callDoc.exists()) {\n    const data = callDoc.data();\n    const candidates = data.iceCandidates || [];\n    await updateDoc(callDocRef, {\n      iceCandidates: [...candidates, candidate],\n    });\n  }\n}\n\nexport async function updateCallStatus(\n    chatId: string, \n    status: 'declined' | 'ended' | 'answered', \n    duration?: number,\n    callerId?: string,\n    calleeId?: string,\n) {\n    const callDocRef = doc(db, 'calls', chatId);\n    const callDoc = await getDoc(callDocRef);\n\n    if (callDoc.exists()) {\n        const callData = callDoc.data();\n        if (status === 'ended' || status === 'declined') {\n            await deleteDoc(callDocRef);\n            \n            if(callerId && calleeId) {\n                let callStatus = callData.status === 'answered' ? 'answered' : (status === 'declined' ? 'declined' : 'missed');\n                let messageText = 'Звонок';\n                 if(callStatus === 'answered') {\n                    messageText = `Звонок длительностью ${duration} сек.`\n                 } else if (callStatus === 'declined') {\n                    messageText = 'Звонок отклонен'\n                 } else if (callStatus === 'missed') {\n                    messageText = 'Пропущенный звонок'\n                 }\n\n                await sendMessage(callerId, calleeId, messageText, undefined, {\n                    status: callStatus,\n                    duration: duration,\n                })\n            }\n        }\n    } else if(status === 'answered') {\n        await setDoc(callDocRef, { status }, { merge: true });\n    }\n}\n"],"names":[],"mappings":";;;;;;IAsCsB,cAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 3124, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["// @ts-nocheck\n'use server';\nimport { filterProfanity } from '@/ai/flows/filter-profanity';\nimport { db, storage } from '@/lib/firebase';\nimport { addDoc, collection, serverTimestamp, doc, updateDoc, deleteDoc, getDoc, setDoc } from 'firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\n\nexport async function getFilteredMessage(text: string) {\n  if (!text.trim()) {\n    return { error: 'Message cannot be empty', data: null };\n  }\n\n  try {\n    const { filteredText } = await filterProfanity({ text });\n    return {\n      error: null,\n      data: {\n        id: crypto.randomUUID(),\n        text: filteredText,\n      }\n    };\n  } catch (error) {\n    console.error('Error filtering profanity:', error);\n    // Fallback to original text if AI fails\n    return {\n      error: 'Failed to process message with AI',\n      data: {\n        id: crypto.randomUUID(),\n        text: text,\n      }\n    };\n  }\n}\n\nfunction getChatId(userId1: string, userId2: string) {\n    return [userId1, userId2].sort().join('_');\n}\n\nexport async function sendMessage(senderId: string, recipientId: string, text: string, forwardedFrom?: { name: string, text: string }, callInfo?: { status: 'answered' | 'declined' | 'missed', duration?: number }) {\n    if (!text.trim() && !callInfo) {\n        return { error: 'Message cannot be empty' };\n    }\n    \n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text,\n            timestamp: serverTimestamp(),\n            type: callInfo ? 'call' : 'text',\n            edited: false,\n            forwardedFrom: forwardedFrom || null,\n            callInfo: callInfo || null,\n        });\n        return { error: null, data: { id: docRef.id, text } };\n    } catch (error) {\n        console.error(\"Error sending message:\", error);\n        return { error: 'Failed to send message' };\n    }\n}\n\nexport async function sendSticker(senderId: string, recipientId: string, stickerId: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'sticker',\n            stickerId,\n        });\n        return { error: null, data: { id: docRef.id, stickerId } };\n    } catch (error) {\n        console.error(\"Error sending sticker:\", error);\n        return { error: 'Failed to send sticker' };\n    }\n}\n\nexport async function sendGif(senderId: string, recipientId: string, gifUrl: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'gif',\n            gifUrl,\n        });\n        return { error: null, data: { id: docRef.id, gifUrl } };\n    } catch (error) {\n        console.error(\"Error sending GIF:\", error);\n        return { error: 'Failed to send GIF' };\n    }\n}\n\nexport async function searchGifs(query: string) {\n  const apiKey = process.env.GIPHY_API_KEY;\n  if (!apiKey) {\n    console.error('GIPHY API key not found.');\n    return { error: 'GIF service is not configured.' };\n  }\n  \n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURIComponent(query)}&limit=21&offset=0&rating=g&lang=en`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('GIPHY API error:', response.status, errorText);\n      return { error: 'Failed to fetch GIFs from GIPHY.' };\n    }\n    const data = await response.json();\n    const gifs = data.data.map((r: any) => ({\n      id: r.id,\n      url: r.images.fixed_height.url,\n      preview: r.images.fixed_height_small.url,\n    }));\n    return { data: gifs };\n  } catch (error) {\n    console.error('Error fetching GIFs from GIPHY:', error);\n    return { error: 'Failed to fetch GIFs.' };\n  }\n}\n\n\nexport async function editMessage(chatId: string, messageId: string, newText: string) {\n    if (!newText.trim()) {\n        return { error: \"Message can't be empty\" };\n    }\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await updateDoc(messageRef, {\n            text: newText,\n            edited: true,\n        });\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error editing message:\", error);\n        return { error: 'Failed to edit message' };\n    }\n}\n\nexport async function deleteMessage(chatId: string, messageId: string) {\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await deleteDoc(messageRef);\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting message:\", error);\n        return { error: 'Failed to delete message' };\n    }\n}\n\n\n// WebRTC Signaling Actions\nexport async function createCallOffer(chatId: string, offer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await setDoc(callDocRef, {\n    offer,\n    status: 'ringing',\n    createdAt: serverTimestamp(),\n  });\n}\n\nexport async function createCallAnswer(chatId: string, answer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await updateDoc(callDocRef, { answer, status: 'answered' });\n}\n\nexport async function addIceCandidate(chatId: string, candidate: RTCIceCandidateInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  const callDoc = await getDoc(callDocRef);\n  if (callDoc.exists()) {\n    const data = callDoc.data();\n    const candidates = data.iceCandidates || [];\n    await updateDoc(callDocRef, {\n      iceCandidates: [...candidates, candidate],\n    });\n  }\n}\n\nexport async function updateCallStatus(\n    chatId: string, \n    status: 'declined' | 'ended' | 'answered', \n    duration?: number,\n    callerId?: string,\n    calleeId?: string,\n) {\n    const callDocRef = doc(db, 'calls', chatId);\n    const callDoc = await getDoc(callDocRef);\n\n    if (callDoc.exists()) {\n        const callData = callDoc.data();\n        if (status === 'ended' || status === 'declined') {\n            await deleteDoc(callDocRef);\n            \n            if(callerId && calleeId) {\n                let callStatus = callData.status === 'answered' ? 'answered' : (status === 'declined' ? 'declined' : 'missed');\n                let messageText = 'Звонок';\n                 if(callStatus === 'answered') {\n                    messageText = `Звонок длительностью ${duration} сек.`\n                 } else if (callStatus === 'declined') {\n                    messageText = 'Звонок отклонен'\n                 } else if (callStatus === 'missed') {\n                    messageText = 'Пропущенный звонок'\n                 }\n\n                await sendMessage(callerId, calleeId, messageText, undefined, {\n                    status: callStatus,\n                    duration: duration,\n                })\n            }\n        }\n    } else if(status === 'answered') {\n        await setDoc(callDocRef, { status }, { merge: true });\n    }\n}\n"],"names":[],"mappings":";;;;;;IA+DsB,cAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 3140, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["// @ts-nocheck\n'use server';\nimport { filterProfanity } from '@/ai/flows/filter-profanity';\nimport { db, storage } from '@/lib/firebase';\nimport { addDoc, collection, serverTimestamp, doc, updateDoc, deleteDoc, getDoc, setDoc } from 'firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\n\nexport async function getFilteredMessage(text: string) {\n  if (!text.trim()) {\n    return { error: 'Message cannot be empty', data: null };\n  }\n\n  try {\n    const { filteredText } = await filterProfanity({ text });\n    return {\n      error: null,\n      data: {\n        id: crypto.randomUUID(),\n        text: filteredText,\n      }\n    };\n  } catch (error) {\n    console.error('Error filtering profanity:', error);\n    // Fallback to original text if AI fails\n    return {\n      error: 'Failed to process message with AI',\n      data: {\n        id: crypto.randomUUID(),\n        text: text,\n      }\n    };\n  }\n}\n\nfunction getChatId(userId1: string, userId2: string) {\n    return [userId1, userId2].sort().join('_');\n}\n\nexport async function sendMessage(senderId: string, recipientId: string, text: string, forwardedFrom?: { name: string, text: string }, callInfo?: { status: 'answered' | 'declined' | 'missed', duration?: number }) {\n    if (!text.trim() && !callInfo) {\n        return { error: 'Message cannot be empty' };\n    }\n    \n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text,\n            timestamp: serverTimestamp(),\n            type: callInfo ? 'call' : 'text',\n            edited: false,\n            forwardedFrom: forwardedFrom || null,\n            callInfo: callInfo || null,\n        });\n        return { error: null, data: { id: docRef.id, text } };\n    } catch (error) {\n        console.error(\"Error sending message:\", error);\n        return { error: 'Failed to send message' };\n    }\n}\n\nexport async function sendSticker(senderId: string, recipientId: string, stickerId: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'sticker',\n            stickerId,\n        });\n        return { error: null, data: { id: docRef.id, stickerId } };\n    } catch (error) {\n        console.error(\"Error sending sticker:\", error);\n        return { error: 'Failed to send sticker' };\n    }\n}\n\nexport async function sendGif(senderId: string, recipientId: string, gifUrl: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'gif',\n            gifUrl,\n        });\n        return { error: null, data: { id: docRef.id, gifUrl } };\n    } catch (error) {\n        console.error(\"Error sending GIF:\", error);\n        return { error: 'Failed to send GIF' };\n    }\n}\n\nexport async function searchGifs(query: string) {\n  const apiKey = process.env.GIPHY_API_KEY;\n  if (!apiKey) {\n    console.error('GIPHY API key not found.');\n    return { error: 'GIF service is not configured.' };\n  }\n  \n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURIComponent(query)}&limit=21&offset=0&rating=g&lang=en`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('GIPHY API error:', response.status, errorText);\n      return { error: 'Failed to fetch GIFs from GIPHY.' };\n    }\n    const data = await response.json();\n    const gifs = data.data.map((r: any) => ({\n      id: r.id,\n      url: r.images.fixed_height.url,\n      preview: r.images.fixed_height_small.url,\n    }));\n    return { data: gifs };\n  } catch (error) {\n    console.error('Error fetching GIFs from GIPHY:', error);\n    return { error: 'Failed to fetch GIFs.' };\n  }\n}\n\n\nexport async function editMessage(chatId: string, messageId: string, newText: string) {\n    if (!newText.trim()) {\n        return { error: \"Message can't be empty\" };\n    }\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await updateDoc(messageRef, {\n            text: newText,\n            edited: true,\n        });\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error editing message:\", error);\n        return { error: 'Failed to edit message' };\n    }\n}\n\nexport async function deleteMessage(chatId: string, messageId: string) {\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await deleteDoc(messageRef);\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting message:\", error);\n        return { error: 'Failed to delete message' };\n    }\n}\n\n\n// WebRTC Signaling Actions\nexport async function createCallOffer(chatId: string, offer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await setDoc(callDocRef, {\n    offer,\n    status: 'ringing',\n    createdAt: serverTimestamp(),\n  });\n}\n\nexport async function createCallAnswer(chatId: string, answer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await updateDoc(callDocRef, { answer, status: 'answered' });\n}\n\nexport async function addIceCandidate(chatId: string, candidate: RTCIceCandidateInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  const callDoc = await getDoc(callDocRef);\n  if (callDoc.exists()) {\n    const data = callDoc.data();\n    const candidates = data.iceCandidates || [];\n    await updateDoc(callDocRef, {\n      iceCandidates: [...candidates, candidate],\n    });\n  }\n}\n\nexport async function updateCallStatus(\n    chatId: string, \n    status: 'declined' | 'ended' | 'answered', \n    duration?: number,\n    callerId?: string,\n    calleeId?: string,\n) {\n    const callDocRef = doc(db, 'calls', chatId);\n    const callDoc = await getDoc(callDocRef);\n\n    if (callDoc.exists()) {\n        const callData = callDoc.data();\n        if (status === 'ended' || status === 'declined') {\n            await deleteDoc(callDocRef);\n            \n            if(callerId && calleeId) {\n                let callStatus = callData.status === 'answered' ? 'answered' : (status === 'declined' ? 'declined' : 'missed');\n                let messageText = 'Звонок';\n                 if(callStatus === 'answered') {\n                    messageText = `Звонок длительностью ${duration} сек.`\n                 } else if (callStatus === 'declined') {\n                    messageText = 'Звонок отклонен'\n                 } else if (callStatus === 'missed') {\n                    messageText = 'Пропущенный звонок'\n                 }\n\n                await sendMessage(callerId, calleeId, messageText, undefined, {\n                    status: callStatus,\n                    duration: duration,\n                })\n            }\n        }\n    } else if(status === 'answered') {\n        await setDoc(callDocRef, { status }, { merge: true });\n    }\n}\n"],"names":[],"mappings":";;;;;;IAmIsB,cAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 3156, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["// @ts-nocheck\n'use server';\nimport { filterProfanity } from '@/ai/flows/filter-profanity';\nimport { db, storage } from '@/lib/firebase';\nimport { addDoc, collection, serverTimestamp, doc, updateDoc, deleteDoc, getDoc, setDoc } from 'firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\n\nexport async function getFilteredMessage(text: string) {\n  if (!text.trim()) {\n    return { error: 'Message cannot be empty', data: null };\n  }\n\n  try {\n    const { filteredText } = await filterProfanity({ text });\n    return {\n      error: null,\n      data: {\n        id: crypto.randomUUID(),\n        text: filteredText,\n      }\n    };\n  } catch (error) {\n    console.error('Error filtering profanity:', error);\n    // Fallback to original text if AI fails\n    return {\n      error: 'Failed to process message with AI',\n      data: {\n        id: crypto.randomUUID(),\n        text: text,\n      }\n    };\n  }\n}\n\nfunction getChatId(userId1: string, userId2: string) {\n    return [userId1, userId2].sort().join('_');\n}\n\nexport async function sendMessage(senderId: string, recipientId: string, text: string, forwardedFrom?: { name: string, text: string }, callInfo?: { status: 'answered' | 'declined' | 'missed', duration?: number }) {\n    if (!text.trim() && !callInfo) {\n        return { error: 'Message cannot be empty' };\n    }\n    \n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text,\n            timestamp: serverTimestamp(),\n            type: callInfo ? 'call' : 'text',\n            edited: false,\n            forwardedFrom: forwardedFrom || null,\n            callInfo: callInfo || null,\n        });\n        return { error: null, data: { id: docRef.id, text } };\n    } catch (error) {\n        console.error(\"Error sending message:\", error);\n        return { error: 'Failed to send message' };\n    }\n}\n\nexport async function sendSticker(senderId: string, recipientId: string, stickerId: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'sticker',\n            stickerId,\n        });\n        return { error: null, data: { id: docRef.id, stickerId } };\n    } catch (error) {\n        console.error(\"Error sending sticker:\", error);\n        return { error: 'Failed to send sticker' };\n    }\n}\n\nexport async function sendGif(senderId: string, recipientId: string, gifUrl: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'gif',\n            gifUrl,\n        });\n        return { error: null, data: { id: docRef.id, gifUrl } };\n    } catch (error) {\n        console.error(\"Error sending GIF:\", error);\n        return { error: 'Failed to send GIF' };\n    }\n}\n\nexport async function searchGifs(query: string) {\n  const apiKey = process.env.GIPHY_API_KEY;\n  if (!apiKey) {\n    console.error('GIPHY API key not found.');\n    return { error: 'GIF service is not configured.' };\n  }\n  \n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURIComponent(query)}&limit=21&offset=0&rating=g&lang=en`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('GIPHY API error:', response.status, errorText);\n      return { error: 'Failed to fetch GIFs from GIPHY.' };\n    }\n    const data = await response.json();\n    const gifs = data.data.map((r: any) => ({\n      id: r.id,\n      url: r.images.fixed_height.url,\n      preview: r.images.fixed_height_small.url,\n    }));\n    return { data: gifs };\n  } catch (error) {\n    console.error('Error fetching GIFs from GIPHY:', error);\n    return { error: 'Failed to fetch GIFs.' };\n  }\n}\n\n\nexport async function editMessage(chatId: string, messageId: string, newText: string) {\n    if (!newText.trim()) {\n        return { error: \"Message can't be empty\" };\n    }\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await updateDoc(messageRef, {\n            text: newText,\n            edited: true,\n        });\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error editing message:\", error);\n        return { error: 'Failed to edit message' };\n    }\n}\n\nexport async function deleteMessage(chatId: string, messageId: string) {\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await deleteDoc(messageRef);\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting message:\", error);\n        return { error: 'Failed to delete message' };\n    }\n}\n\n\n// WebRTC Signaling Actions\nexport async function createCallOffer(chatId: string, offer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await setDoc(callDocRef, {\n    offer,\n    status: 'ringing',\n    createdAt: serverTimestamp(),\n  });\n}\n\nexport async function createCallAnswer(chatId: string, answer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await updateDoc(callDocRef, { answer, status: 'answered' });\n}\n\nexport async function addIceCandidate(chatId: string, candidate: RTCIceCandidateInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  const callDoc = await getDoc(callDocRef);\n  if (callDoc.exists()) {\n    const data = callDoc.data();\n    const candidates = data.iceCandidates || [];\n    await updateDoc(callDocRef, {\n      iceCandidates: [...candidates, candidate],\n    });\n  }\n}\n\nexport async function updateCallStatus(\n    chatId: string, \n    status: 'declined' | 'ended' | 'answered', \n    duration?: number,\n    callerId?: string,\n    calleeId?: string,\n) {\n    const callDocRef = doc(db, 'calls', chatId);\n    const callDoc = await getDoc(callDocRef);\n\n    if (callDoc.exists()) {\n        const callData = callDoc.data();\n        if (status === 'ended' || status === 'declined') {\n            await deleteDoc(callDocRef);\n            \n            if(callerId && calleeId) {\n                let callStatus = callData.status === 'answered' ? 'answered' : (status === 'declined' ? 'declined' : 'missed');\n                let messageText = 'Звонок';\n                 if(callStatus === 'answered') {\n                    messageText = `Звонок длительностью ${duration} сек.`\n                 } else if (callStatus === 'declined') {\n                    messageText = 'Звонок отклонен'\n                 } else if (callStatus === 'missed') {\n                    messageText = 'Пропущенный звонок'\n                 }\n\n                await sendMessage(callerId, calleeId, messageText, undefined, {\n                    status: callStatus,\n                    duration: duration,\n                })\n            }\n        }\n    } else if(status === 'answered') {\n        await setDoc(callDocRef, { status }, { merge: true });\n    }\n}\n"],"names":[],"mappings":";;;;;;IAoJsB,gBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 3172, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["// @ts-nocheck\n'use server';\nimport { filterProfanity } from '@/ai/flows/filter-profanity';\nimport { db, storage } from '@/lib/firebase';\nimport { addDoc, collection, serverTimestamp, doc, updateDoc, deleteDoc, getDoc, setDoc } from 'firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\n\nexport async function getFilteredMessage(text: string) {\n  if (!text.trim()) {\n    return { error: 'Message cannot be empty', data: null };\n  }\n\n  try {\n    const { filteredText } = await filterProfanity({ text });\n    return {\n      error: null,\n      data: {\n        id: crypto.randomUUID(),\n        text: filteredText,\n      }\n    };\n  } catch (error) {\n    console.error('Error filtering profanity:', error);\n    // Fallback to original text if AI fails\n    return {\n      error: 'Failed to process message with AI',\n      data: {\n        id: crypto.randomUUID(),\n        text: text,\n      }\n    };\n  }\n}\n\nfunction getChatId(userId1: string, userId2: string) {\n    return [userId1, userId2].sort().join('_');\n}\n\nexport async function sendMessage(senderId: string, recipientId: string, text: string, forwardedFrom?: { name: string, text: string }, callInfo?: { status: 'answered' | 'declined' | 'missed', duration?: number }) {\n    if (!text.trim() && !callInfo) {\n        return { error: 'Message cannot be empty' };\n    }\n    \n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text,\n            timestamp: serverTimestamp(),\n            type: callInfo ? 'call' : 'text',\n            edited: false,\n            forwardedFrom: forwardedFrom || null,\n            callInfo: callInfo || null,\n        });\n        return { error: null, data: { id: docRef.id, text } };\n    } catch (error) {\n        console.error(\"Error sending message:\", error);\n        return { error: 'Failed to send message' };\n    }\n}\n\nexport async function sendSticker(senderId: string, recipientId: string, stickerId: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'sticker',\n            stickerId,\n        });\n        return { error: null, data: { id: docRef.id, stickerId } };\n    } catch (error) {\n        console.error(\"Error sending sticker:\", error);\n        return { error: 'Failed to send sticker' };\n    }\n}\n\nexport async function sendGif(senderId: string, recipientId: string, gifUrl: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'gif',\n            gifUrl,\n        });\n        return { error: null, data: { id: docRef.id, gifUrl } };\n    } catch (error) {\n        console.error(\"Error sending GIF:\", error);\n        return { error: 'Failed to send GIF' };\n    }\n}\n\nexport async function searchGifs(query: string) {\n  const apiKey = process.env.GIPHY_API_KEY;\n  if (!apiKey) {\n    console.error('GIPHY API key not found.');\n    return { error: 'GIF service is not configured.' };\n  }\n  \n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURIComponent(query)}&limit=21&offset=0&rating=g&lang=en`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('GIPHY API error:', response.status, errorText);\n      return { error: 'Failed to fetch GIFs from GIPHY.' };\n    }\n    const data = await response.json();\n    const gifs = data.data.map((r: any) => ({\n      id: r.id,\n      url: r.images.fixed_height.url,\n      preview: r.images.fixed_height_small.url,\n    }));\n    return { data: gifs };\n  } catch (error) {\n    console.error('Error fetching GIFs from GIPHY:', error);\n    return { error: 'Failed to fetch GIFs.' };\n  }\n}\n\n\nexport async function editMessage(chatId: string, messageId: string, newText: string) {\n    if (!newText.trim()) {\n        return { error: \"Message can't be empty\" };\n    }\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await updateDoc(messageRef, {\n            text: newText,\n            edited: true,\n        });\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error editing message:\", error);\n        return { error: 'Failed to edit message' };\n    }\n}\n\nexport async function deleteMessage(chatId: string, messageId: string) {\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await deleteDoc(messageRef);\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting message:\", error);\n        return { error: 'Failed to delete message' };\n    }\n}\n\n\n// WebRTC Signaling Actions\nexport async function createCallOffer(chatId: string, offer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await setDoc(callDocRef, {\n    offer,\n    status: 'ringing',\n    createdAt: serverTimestamp(),\n  });\n}\n\nexport async function createCallAnswer(chatId: string, answer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await updateDoc(callDocRef, { answer, status: 'answered' });\n}\n\nexport async function addIceCandidate(chatId: string, candidate: RTCIceCandidateInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  const callDoc = await getDoc(callDocRef);\n  if (callDoc.exists()) {\n    const data = callDoc.data();\n    const candidates = data.iceCandidates || [];\n    await updateDoc(callDocRef, {\n      iceCandidates: [...candidates, candidate],\n    });\n  }\n}\n\nexport async function updateCallStatus(\n    chatId: string, \n    status: 'declined' | 'ended' | 'answered', \n    duration?: number,\n    callerId?: string,\n    calleeId?: string,\n) {\n    const callDocRef = doc(db, 'calls', chatId);\n    const callDoc = await getDoc(callDocRef);\n\n    if (callDoc.exists()) {\n        const callData = callDoc.data();\n        if (status === 'ended' || status === 'declined') {\n            await deleteDoc(callDocRef);\n            \n            if(callerId && calleeId) {\n                let callStatus = callData.status === 'answered' ? 'answered' : (status === 'declined' ? 'declined' : 'missed');\n                let messageText = 'Звонок';\n                 if(callStatus === 'answered') {\n                    messageText = `Звонок длительностью ${duration} сек.`\n                 } else if (callStatus === 'declined') {\n                    messageText = 'Звонок отклонен'\n                 } else if (callStatus === 'missed') {\n                    messageText = 'Пропущенный звонок'\n                 }\n\n                await sendMessage(callerId, calleeId, messageText, undefined, {\n                    status: callStatus,\n                    duration: duration,\n                })\n            }\n        }\n    } else if(status === 'answered') {\n        await setDoc(callDocRef, { status }, { merge: true });\n    }\n}\n"],"names":[],"mappings":";;;;;;IAkFsB,UAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 3188, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["// @ts-nocheck\nimport { initializeApp, getApp, getApps } from 'firebase/app';\nimport { getFirestore, enableMultiTabIndexedDbPersistence } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { getStorage } from 'firebase/storage';\n\n// Your web app's Firebase configuration\n// IMPORTANT: Replace this with your own Firebase project configuration!\n// You can get this from the Firebase console:\n// Project settings > General > Your apps > Web app > Firebase SDK snippet > Config\nconst firebaseConfig = {\n\n  apiKey: \"AIzaSyCJhbJ9Hx4ZzDneeSrPE-W1Hh7ifI1Ydxw\",\n\n  authDomain: \"coo-messenger-dut4g.firebaseapp.com\",\n\n  projectId: \"coo-messenger-dut4g\",\n\n  storageBucket: \"coo-messenger-dut4g.firebasestorage.app\",\n\n  messagingSenderId: \"289105120218\",\n\n  appId: \"1:289105120218:web:0a828e96df9dc829edcee3\"\n\n};\n\n\n\n\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\nconst auth = getAuth(app);\nconst storage = getStorage(app);\n\n\n// This enables offline persistence. It's best to call this only once.\ntry {\n  enableMultiTabIndexedDbPersistence(db)\n    .catch((err) => {\n      if (err.code === 'failed-precondition') {\n        // Multiple tabs open, persistence can only be enabled in one tab at a time.\n        console.log('Firebase persistence failed: multiple tabs open.');\n      } else if (err.code === 'unimplemented') {\n        // The current browser does not support all of the\n        // features required to enable persistence\n         console.log('Firebase persistence failed: browser does not support it.');\n      }\n    });\n} catch(e) {\n    console.error(\"Firebase persistence error\", e);\n}\n\n\nexport { app, db, auth, storage };\n"],"names":[],"mappings":"AAAA,cAAc;;;;;;;AACd;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEA,wCAAwC;AACxC,wEAAwE;AACxE,8CAA8C;AAC9C,mFAAmF;AACnF,MAAM,iBAAiB;IAErB,QAAQ;IAER,YAAY;IAEZ,WAAW;IAEX,eAAe;IAEf,mBAAmB;IAEnB,OAAO;AAET;AAKA,MAAM,MAAM,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE;AACxB,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,UAAU,CAAA,GAAA,oKAAA,CAAA,aAAU,AAAD,EAAE;AAG3B,sEAAsE;AACtE,IAAI;IACF,CAAA,GAAA,sKAAA,CAAA,qCAAkC,AAAD,EAAE,IAChC,KAAK,CAAC,CAAC;QACN,IAAI,IAAI,IAAI,KAAK,uBAAuB;YACtC,4EAA4E;YAC5E,QAAQ,GAAG,CAAC;QACd,OAAO,IAAI,IAAI,IAAI,KAAK,iBAAiB;YACvC,kDAAkD;YAClD,0CAA0C;YACzC,QAAQ,GAAG,CAAC;QACf;IACF;AACJ,EAAE,OAAM,GAAG;IACP,QAAQ,KAAK,CAAC,8BAA8B;AAChD","debugId":null}},
    {"offset": {"line": 3248, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/forward-message-dialog.tsx"],"sourcesContent":["import {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { allUsers } from '@/lib/data';\nimport type { User } from '@/lib/types';\nimport { useState } from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface ForwardMessageDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onForward: (recipientId: string) => void;\n  currentUser: User;\n}\n\nexport function ForwardMessageDialog({ isOpen, onClose, onForward, currentUser }: ForwardMessageDialogProps) {\n    const [selectedUserId, setSelectedUserId] = useState<string | null>(null);\n    const users = allUsers.filter(u => u.id !== currentUser.id);\n\n    const handleForward = () => {\n        if(selectedUserId) {\n            onForward(selectedUserId);\n        }\n    }\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>Переслать сообщение</DialogTitle>\n        </DialogHeader>\n        <ScrollArea className=\"h-[300px] pr-4\">\n          <div className=\"flex flex-col gap-2\">\n            {users.map(user => (\n              <div\n                key={user.id}\n                className={cn(\n                    \"flex items-center gap-3 p-2 rounded-md cursor-pointer hover:bg-accent\",\n                    selectedUserId === user.id && \"bg-accent\"\n                )}\n                onClick={() => setSelectedUserId(user.id)}\n              >\n                <Avatar>\n                  <AvatarImage src={user.avatar} />\n                  <AvatarFallback>{user.name.charAt(0)}</AvatarFallback>\n                </Avatar>\n                <span>{user.name}</span>\n              </div>\n            ))}\n          </div>\n        </ScrollArea>\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={onClose}>Отмена</Button>\n          <Button onClick={handleForward} disabled={!selectedUserId}>Переслать</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAOA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;AASO,SAAS,qBAAqB,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,WAAW,EAA6B;;IACvG,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,MAAM,QAAQ,qHAAA,CAAA,WAAQ,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,YAAY,EAAE;IAE1D,MAAM,gBAAgB;QAClB,IAAG,gBAAgB;YACf,UAAU;QACd;IACJ;IAEF,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;kBAClC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;;8BACZ,6LAAC,qIAAA,CAAA,eAAY;8BACX,cAAA,6LAAC,qIAAA,CAAA,cAAW;kCAAC;;;;;;;;;;;8BAEf,6LAAC,6IAAA,CAAA,aAAU;oBAAC,WAAU;8BACpB,cAAA,6LAAC;wBAAI,WAAU;kCACZ,MAAM,GAAG,CAAC,CAAA,qBACT,6LAAC;gCAEC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,yEACA,mBAAmB,KAAK,EAAE,IAAI;gCAElC,SAAS,IAAM,kBAAkB,KAAK,EAAE;;kDAExC,6LAAC,qIAAA,CAAA,SAAM;;0DACL,6LAAC,qIAAA,CAAA,cAAW;gDAAC,KAAK,KAAK,MAAM;;;;;;0DAC7B,6LAAC,qIAAA,CAAA,iBAAc;0DAAE,KAAK,IAAI,CAAC,MAAM,CAAC;;;;;;;;;;;;kDAEpC,6LAAC;kDAAM,KAAK,IAAI;;;;;;;+BAXX,KAAK,EAAE;;;;;;;;;;;;;;;8BAgBpB,6LAAC,qIAAA,CAAA,eAAY;;sCACX,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,SAAS;sCAAS;;;;;;sCAC5C,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAS;4BAAe,UAAU,CAAC;sCAAgB;;;;;;;;;;;;;;;;;;;;;;;AAKrE;GA3CgB;KAAA","debugId":null}},
    {"offset": {"line": 3399, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["// @ts-nocheck\n'use server';\nimport { filterProfanity } from '@/ai/flows/filter-profanity';\nimport { db, storage } from '@/lib/firebase';\nimport { addDoc, collection, serverTimestamp, doc, updateDoc, deleteDoc, getDoc, setDoc } from 'firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\n\nexport async function getFilteredMessage(text: string) {\n  if (!text.trim()) {\n    return { error: 'Message cannot be empty', data: null };\n  }\n\n  try {\n    const { filteredText } = await filterProfanity({ text });\n    return {\n      error: null,\n      data: {\n        id: crypto.randomUUID(),\n        text: filteredText,\n      }\n    };\n  } catch (error) {\n    console.error('Error filtering profanity:', error);\n    // Fallback to original text if AI fails\n    return {\n      error: 'Failed to process message with AI',\n      data: {\n        id: crypto.randomUUID(),\n        text: text,\n      }\n    };\n  }\n}\n\nfunction getChatId(userId1: string, userId2: string) {\n    return [userId1, userId2].sort().join('_');\n}\n\nexport async function sendMessage(senderId: string, recipientId: string, text: string, forwardedFrom?: { name: string, text: string }, callInfo?: { status: 'answered' | 'declined' | 'missed', duration?: number }) {\n    if (!text.trim() && !callInfo) {\n        return { error: 'Message cannot be empty' };\n    }\n    \n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text,\n            timestamp: serverTimestamp(),\n            type: callInfo ? 'call' : 'text',\n            edited: false,\n            forwardedFrom: forwardedFrom || null,\n            callInfo: callInfo || null,\n        });\n        return { error: null, data: { id: docRef.id, text } };\n    } catch (error) {\n        console.error(\"Error sending message:\", error);\n        return { error: 'Failed to send message' };\n    }\n}\n\nexport async function sendSticker(senderId: string, recipientId: string, stickerId: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'sticker',\n            stickerId,\n        });\n        return { error: null, data: { id: docRef.id, stickerId } };\n    } catch (error) {\n        console.error(\"Error sending sticker:\", error);\n        return { error: 'Failed to send sticker' };\n    }\n}\n\nexport async function sendGif(senderId: string, recipientId: string, gifUrl: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'gif',\n            gifUrl,\n        });\n        return { error: null, data: { id: docRef.id, gifUrl } };\n    } catch (error) {\n        console.error(\"Error sending GIF:\", error);\n        return { error: 'Failed to send GIF' };\n    }\n}\n\nexport async function searchGifs(query: string) {\n  const apiKey = process.env.GIPHY_API_KEY;\n  if (!apiKey) {\n    console.error('GIPHY API key not found.');\n    return { error: 'GIF service is not configured.' };\n  }\n  \n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURIComponent(query)}&limit=21&offset=0&rating=g&lang=en`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('GIPHY API error:', response.status, errorText);\n      return { error: 'Failed to fetch GIFs from GIPHY.' };\n    }\n    const data = await response.json();\n    const gifs = data.data.map((r: any) => ({\n      id: r.id,\n      url: r.images.fixed_height.url,\n      preview: r.images.fixed_height_small.url,\n    }));\n    return { data: gifs };\n  } catch (error) {\n    console.error('Error fetching GIFs from GIPHY:', error);\n    return { error: 'Failed to fetch GIFs.' };\n  }\n}\n\n\nexport async function editMessage(chatId: string, messageId: string, newText: string) {\n    if (!newText.trim()) {\n        return { error: \"Message can't be empty\" };\n    }\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await updateDoc(messageRef, {\n            text: newText,\n            edited: true,\n        });\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error editing message:\", error);\n        return { error: 'Failed to edit message' };\n    }\n}\n\nexport async function deleteMessage(chatId: string, messageId: string) {\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await deleteDoc(messageRef);\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting message:\", error);\n        return { error: 'Failed to delete message' };\n    }\n}\n\n\n// WebRTC Signaling Actions\nexport async function createCallOffer(chatId: string, offer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await setDoc(callDocRef, {\n    offer,\n    status: 'ringing',\n    createdAt: serverTimestamp(),\n  });\n}\n\nexport async function createCallAnswer(chatId: string, answer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await updateDoc(callDocRef, { answer, status: 'answered' });\n}\n\nexport async function addIceCandidate(chatId: string, candidate: RTCIceCandidateInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  const callDoc = await getDoc(callDocRef);\n  if (callDoc.exists()) {\n    const data = callDoc.data();\n    const candidates = data.iceCandidates || [];\n    await updateDoc(callDocRef, {\n      iceCandidates: [...candidates, candidate],\n    });\n  }\n}\n\nexport async function updateCallStatus(\n    chatId: string, \n    status: 'declined' | 'ended' | 'answered', \n    duration?: number,\n    callerId?: string,\n    calleeId?: string,\n) {\n    const callDocRef = doc(db, 'calls', chatId);\n    const callDoc = await getDoc(callDocRef);\n\n    if (callDoc.exists()) {\n        const callData = callDoc.data();\n        if (status === 'ended' || status === 'declined') {\n            await deleteDoc(callDocRef);\n            \n            if(callerId && calleeId) {\n                let callStatus = callData.status === 'answered' ? 'answered' : (status === 'declined' ? 'declined' : 'missed');\n                let messageText = 'Звонок';\n                 if(callStatus === 'answered') {\n                    messageText = `Звонок длительностью ${duration} сек.`\n                 } else if (callStatus === 'declined') {\n                    messageText = 'Звонок отклонен'\n                 } else if (callStatus === 'missed') {\n                    messageText = 'Пропущенный звонок'\n                 }\n\n                await sendMessage(callerId, calleeId, messageText, undefined, {\n                    status: callStatus,\n                    duration: duration,\n                })\n            }\n        }\n    } else if(status === 'answered') {\n        await setDoc(callDocRef, { status }, { merge: true });\n    }\n}\n"],"names":[],"mappings":";;;;;;IA+KsB,kBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 3415, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["// @ts-nocheck\n'use server';\nimport { filterProfanity } from '@/ai/flows/filter-profanity';\nimport { db, storage } from '@/lib/firebase';\nimport { addDoc, collection, serverTimestamp, doc, updateDoc, deleteDoc, getDoc, setDoc } from 'firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\n\nexport async function getFilteredMessage(text: string) {\n  if (!text.trim()) {\n    return { error: 'Message cannot be empty', data: null };\n  }\n\n  try {\n    const { filteredText } = await filterProfanity({ text });\n    return {\n      error: null,\n      data: {\n        id: crypto.randomUUID(),\n        text: filteredText,\n      }\n    };\n  } catch (error) {\n    console.error('Error filtering profanity:', error);\n    // Fallback to original text if AI fails\n    return {\n      error: 'Failed to process message with AI',\n      data: {\n        id: crypto.randomUUID(),\n        text: text,\n      }\n    };\n  }\n}\n\nfunction getChatId(userId1: string, userId2: string) {\n    return [userId1, userId2].sort().join('_');\n}\n\nexport async function sendMessage(senderId: string, recipientId: string, text: string, forwardedFrom?: { name: string, text: string }, callInfo?: { status: 'answered' | 'declined' | 'missed', duration?: number }) {\n    if (!text.trim() && !callInfo) {\n        return { error: 'Message cannot be empty' };\n    }\n    \n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text,\n            timestamp: serverTimestamp(),\n            type: callInfo ? 'call' : 'text',\n            edited: false,\n            forwardedFrom: forwardedFrom || null,\n            callInfo: callInfo || null,\n        });\n        return { error: null, data: { id: docRef.id, text } };\n    } catch (error) {\n        console.error(\"Error sending message:\", error);\n        return { error: 'Failed to send message' };\n    }\n}\n\nexport async function sendSticker(senderId: string, recipientId: string, stickerId: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'sticker',\n            stickerId,\n        });\n        return { error: null, data: { id: docRef.id, stickerId } };\n    } catch (error) {\n        console.error(\"Error sending sticker:\", error);\n        return { error: 'Failed to send sticker' };\n    }\n}\n\nexport async function sendGif(senderId: string, recipientId: string, gifUrl: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'gif',\n            gifUrl,\n        });\n        return { error: null, data: { id: docRef.id, gifUrl } };\n    } catch (error) {\n        console.error(\"Error sending GIF:\", error);\n        return { error: 'Failed to send GIF' };\n    }\n}\n\nexport async function searchGifs(query: string) {\n  const apiKey = process.env.GIPHY_API_KEY;\n  if (!apiKey) {\n    console.error('GIPHY API key not found.');\n    return { error: 'GIF service is not configured.' };\n  }\n  \n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURIComponent(query)}&limit=21&offset=0&rating=g&lang=en`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('GIPHY API error:', response.status, errorText);\n      return { error: 'Failed to fetch GIFs from GIPHY.' };\n    }\n    const data = await response.json();\n    const gifs = data.data.map((r: any) => ({\n      id: r.id,\n      url: r.images.fixed_height.url,\n      preview: r.images.fixed_height_small.url,\n    }));\n    return { data: gifs };\n  } catch (error) {\n    console.error('Error fetching GIFs from GIPHY:', error);\n    return { error: 'Failed to fetch GIFs.' };\n  }\n}\n\n\nexport async function editMessage(chatId: string, messageId: string, newText: string) {\n    if (!newText.trim()) {\n        return { error: \"Message can't be empty\" };\n    }\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await updateDoc(messageRef, {\n            text: newText,\n            edited: true,\n        });\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error editing message:\", error);\n        return { error: 'Failed to edit message' };\n    }\n}\n\nexport async function deleteMessage(chatId: string, messageId: string) {\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await deleteDoc(messageRef);\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting message:\", error);\n        return { error: 'Failed to delete message' };\n    }\n}\n\n\n// WebRTC Signaling Actions\nexport async function createCallOffer(chatId: string, offer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await setDoc(callDocRef, {\n    offer,\n    status: 'ringing',\n    createdAt: serverTimestamp(),\n  });\n}\n\nexport async function createCallAnswer(chatId: string, answer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await updateDoc(callDocRef, { answer, status: 'answered' });\n}\n\nexport async function addIceCandidate(chatId: string, candidate: RTCIceCandidateInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  const callDoc = await getDoc(callDocRef);\n  if (callDoc.exists()) {\n    const data = callDoc.data();\n    const candidates = data.iceCandidates || [];\n    await updateDoc(callDocRef, {\n      iceCandidates: [...candidates, candidate],\n    });\n  }\n}\n\nexport async function updateCallStatus(\n    chatId: string, \n    status: 'declined' | 'ended' | 'answered', \n    duration?: number,\n    callerId?: string,\n    calleeId?: string,\n) {\n    const callDocRef = doc(db, 'calls', chatId);\n    const callDoc = await getDoc(callDocRef);\n\n    if (callDoc.exists()) {\n        const callData = callDoc.data();\n        if (status === 'ended' || status === 'declined') {\n            await deleteDoc(callDocRef);\n            \n            if(callerId && calleeId) {\n                let callStatus = callData.status === 'answered' ? 'answered' : (status === 'declined' ? 'declined' : 'missed');\n                let messageText = 'Звонок';\n                 if(callStatus === 'answered') {\n                    messageText = `Звонок длительностью ${duration} сек.`\n                 } else if (callStatus === 'declined') {\n                    messageText = 'Звонок отклонен'\n                 } else if (callStatus === 'missed') {\n                    messageText = 'Пропущенный звонок'\n                 }\n\n                await sendMessage(callerId, calleeId, messageText, undefined, {\n                    status: callStatus,\n                    duration: duration,\n                })\n            }\n        }\n    } else if(status === 'answered') {\n        await setDoc(callDocRef, { status }, { merge: true });\n    }\n}\n"],"names":[],"mappings":";;;;;;IA2LsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 3431, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/webrtc.ts"],"sourcesContent":["'use client';\nimport { db } from './firebase';\nimport { doc, onSnapshot, collection, addDoc, updateDoc, getDoc } from 'firebase/firestore';\nimport { addIceCandidate, createCallAnswer, updateCallStatus } from '@/app/actions';\n\nconst servers = {\n  iceServers: [\n    {\n      urls: ['stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302'],\n    },\n  ],\n  iceCandidatePoolSize: 10,\n};\n\nexport const createPeerConnection = (\n    chatId: string, \n    localStream: MediaStream,\n    setRemoteStream: (stream: MediaStream) => void\n): { pc: RTCPeerConnection } => {\n\n  const pc = new RTCPeerConnection(servers);\n\n  localStream.getTracks().forEach((track) => {\n    pc.addTrack(track, localStream);\n  });\n\n  pc.ontrack = (event) => {\n    setRemoteStream(event.streams[0]);\n  };\n  \n  pc.onicecandidate = (event) => {\n    if (event.candidate) {\n      addIceCandidate(chatId, event.candidate.toJSON());\n    }\n  };\n\n  return { pc };\n};\n\n\nexport const hangUp = async (\n    pc: RTCPeerConnection | null, \n    localStream: MediaStream | null, \n    chatId: string, \n    duration: number,\n    callerId: string,\n    calleeId: string\n) => {\n  if (pc) {\n    pc.getSenders().forEach((sender) => {\n        if(sender.track) {\n            sender.track.stop();\n        }\n    });\n    pc.close();\n  }\n  if (localStream) {\n    localStream.getTracks().forEach((track) => track.stop());\n  }\n  \n  if (chatId) {\n    await updateCallStatus(chatId, 'ended', duration, callerId, calleeId);\n  }\n};\n"],"names":[],"mappings":";;;;AAGA;AAAA;AAHA;;AAKA,MAAM,UAAU;IACd,YAAY;QACV;YACE,MAAM;gBAAC;gBAAiC;aAAgC;QAC1E;KACD;IACD,sBAAsB;AACxB;AAEO,MAAM,uBAAuB,CAChC,QACA,aACA;IAGF,MAAM,KAAK,IAAI,kBAAkB;IAEjC,YAAY,SAAS,GAAG,OAAO,CAAC,CAAC;QAC/B,GAAG,QAAQ,CAAC,OAAO;IACrB;IAEA,GAAG,OAAO,GAAG,CAAC;QACZ,gBAAgB,MAAM,OAAO,CAAC,EAAE;IAClC;IAEA,GAAG,cAAc,GAAG,CAAC;QACnB,IAAI,MAAM,SAAS,EAAE;YACnB,CAAA,GAAA,qJAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,MAAM,SAAS,CAAC,MAAM;QAChD;IACF;IAEA,OAAO;QAAE;IAAG;AACd;AAGO,MAAM,SAAS,OAClB,IACA,aACA,QACA,UACA,UACA;IAEF,IAAI,IAAI;QACN,GAAG,UAAU,GAAG,OAAO,CAAC,CAAC;YACrB,IAAG,OAAO,KAAK,EAAE;gBACb,OAAO,KAAK,CAAC,IAAI;YACrB;QACJ;QACA,GAAG,KAAK;IACV;IACA,IAAI,aAAa;QACf,YAAY,SAAS,GAAG,OAAO,CAAC,CAAC,QAAU,MAAM,IAAI;IACvD;IAEA,IAAI,QAAQ;QACV,MAAM,CAAA,GAAA,qJAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ,SAAS,UAAU,UAAU;IAC9D;AACF","debugId":null}},
    {"offset": {"line": 3492, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["// @ts-nocheck\n'use server';\nimport { filterProfanity } from '@/ai/flows/filter-profanity';\nimport { db, storage } from '@/lib/firebase';\nimport { addDoc, collection, serverTimestamp, doc, updateDoc, deleteDoc, getDoc, setDoc } from 'firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\n\nexport async function getFilteredMessage(text: string) {\n  if (!text.trim()) {\n    return { error: 'Message cannot be empty', data: null };\n  }\n\n  try {\n    const { filteredText } = await filterProfanity({ text });\n    return {\n      error: null,\n      data: {\n        id: crypto.randomUUID(),\n        text: filteredText,\n      }\n    };\n  } catch (error) {\n    console.error('Error filtering profanity:', error);\n    // Fallback to original text if AI fails\n    return {\n      error: 'Failed to process message with AI',\n      data: {\n        id: crypto.randomUUID(),\n        text: text,\n      }\n    };\n  }\n}\n\nfunction getChatId(userId1: string, userId2: string) {\n    return [userId1, userId2].sort().join('_');\n}\n\nexport async function sendMessage(senderId: string, recipientId: string, text: string, forwardedFrom?: { name: string, text: string }, callInfo?: { status: 'answered' | 'declined' | 'missed', duration?: number }) {\n    if (!text.trim() && !callInfo) {\n        return { error: 'Message cannot be empty' };\n    }\n    \n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text,\n            timestamp: serverTimestamp(),\n            type: callInfo ? 'call' : 'text',\n            edited: false,\n            forwardedFrom: forwardedFrom || null,\n            callInfo: callInfo || null,\n        });\n        return { error: null, data: { id: docRef.id, text } };\n    } catch (error) {\n        console.error(\"Error sending message:\", error);\n        return { error: 'Failed to send message' };\n    }\n}\n\nexport async function sendSticker(senderId: string, recipientId: string, stickerId: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'sticker',\n            stickerId,\n        });\n        return { error: null, data: { id: docRef.id, stickerId } };\n    } catch (error) {\n        console.error(\"Error sending sticker:\", error);\n        return { error: 'Failed to send sticker' };\n    }\n}\n\nexport async function sendGif(senderId: string, recipientId: string, gifUrl: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'gif',\n            gifUrl,\n        });\n        return { error: null, data: { id: docRef.id, gifUrl } };\n    } catch (error) {\n        console.error(\"Error sending GIF:\", error);\n        return { error: 'Failed to send GIF' };\n    }\n}\n\nexport async function searchGifs(query: string) {\n  const apiKey = process.env.GIPHY_API_KEY;\n  if (!apiKey) {\n    console.error('GIPHY API key not found.');\n    return { error: 'GIF service is not configured.' };\n  }\n  \n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURIComponent(query)}&limit=21&offset=0&rating=g&lang=en`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('GIPHY API error:', response.status, errorText);\n      return { error: 'Failed to fetch GIFs from GIPHY.' };\n    }\n    const data = await response.json();\n    const gifs = data.data.map((r: any) => ({\n      id: r.id,\n      url: r.images.fixed_height.url,\n      preview: r.images.fixed_height_small.url,\n    }));\n    return { data: gifs };\n  } catch (error) {\n    console.error('Error fetching GIFs from GIPHY:', error);\n    return { error: 'Failed to fetch GIFs.' };\n  }\n}\n\n\nexport async function editMessage(chatId: string, messageId: string, newText: string) {\n    if (!newText.trim()) {\n        return { error: \"Message can't be empty\" };\n    }\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await updateDoc(messageRef, {\n            text: newText,\n            edited: true,\n        });\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error editing message:\", error);\n        return { error: 'Failed to edit message' };\n    }\n}\n\nexport async function deleteMessage(chatId: string, messageId: string) {\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await deleteDoc(messageRef);\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting message:\", error);\n        return { error: 'Failed to delete message' };\n    }\n}\n\n\n// WebRTC Signaling Actions\nexport async function createCallOffer(chatId: string, offer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await setDoc(callDocRef, {\n    offer,\n    status: 'ringing',\n    createdAt: serverTimestamp(),\n  });\n}\n\nexport async function createCallAnswer(chatId: string, answer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await updateDoc(callDocRef, { answer, status: 'answered' });\n}\n\nexport async function addIceCandidate(chatId: string, candidate: RTCIceCandidateInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  const callDoc = await getDoc(callDocRef);\n  if (callDoc.exists()) {\n    const data = callDoc.data();\n    const candidates = data.iceCandidates || [];\n    await updateDoc(callDocRef, {\n      iceCandidates: [...candidates, candidate],\n    });\n  }\n}\n\nexport async function updateCallStatus(\n    chatId: string, \n    status: 'declined' | 'ended' | 'answered', \n    duration?: number,\n    callerId?: string,\n    calleeId?: string,\n) {\n    const callDocRef = doc(db, 'calls', chatId);\n    const callDoc = await getDoc(callDocRef);\n\n    if (callDoc.exists()) {\n        const callData = callDoc.data();\n        if (status === 'ended' || status === 'declined') {\n            await deleteDoc(callDocRef);\n            \n            if(callerId && calleeId) {\n                let callStatus = callData.status === 'answered' ? 'answered' : (status === 'declined' ? 'declined' : 'missed');\n                let messageText = 'Звонок';\n                 if(callStatus === 'answered') {\n                    messageText = `Звонок длительностью ${duration} сек.`\n                 } else if (callStatus === 'declined') {\n                    messageText = 'Звонок отклонен'\n                 } else if (callStatus === 'missed') {\n                    messageText = 'Пропущенный звонок'\n                 }\n\n                await sendMessage(callerId, calleeId, messageText, undefined, {\n                    status: callStatus,\n                    duration: duration,\n                })\n            }\n        }\n    } else if(status === 'answered') {\n        await setDoc(callDocRef, { status }, { merge: true });\n    }\n}\n"],"names":[],"mappings":";;;;;;IA0KsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 3508, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["// @ts-nocheck\n'use server';\nimport { filterProfanity } from '@/ai/flows/filter-profanity';\nimport { db, storage } from '@/lib/firebase';\nimport { addDoc, collection, serverTimestamp, doc, updateDoc, deleteDoc, getDoc, setDoc } from 'firebase/firestore';\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\n\nexport async function getFilteredMessage(text: string) {\n  if (!text.trim()) {\n    return { error: 'Message cannot be empty', data: null };\n  }\n\n  try {\n    const { filteredText } = await filterProfanity({ text });\n    return {\n      error: null,\n      data: {\n        id: crypto.randomUUID(),\n        text: filteredText,\n      }\n    };\n  } catch (error) {\n    console.error('Error filtering profanity:', error);\n    // Fallback to original text if AI fails\n    return {\n      error: 'Failed to process message with AI',\n      data: {\n        id: crypto.randomUUID(),\n        text: text,\n      }\n    };\n  }\n}\n\nfunction getChatId(userId1: string, userId2: string) {\n    return [userId1, userId2].sort().join('_');\n}\n\nexport async function sendMessage(senderId: string, recipientId: string, text: string, forwardedFrom?: { name: string, text: string }, callInfo?: { status: 'answered' | 'declined' | 'missed', duration?: number }) {\n    if (!text.trim() && !callInfo) {\n        return { error: 'Message cannot be empty' };\n    }\n    \n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text,\n            timestamp: serverTimestamp(),\n            type: callInfo ? 'call' : 'text',\n            edited: false,\n            forwardedFrom: forwardedFrom || null,\n            callInfo: callInfo || null,\n        });\n        return { error: null, data: { id: docRef.id, text } };\n    } catch (error) {\n        console.error(\"Error sending message:\", error);\n        return { error: 'Failed to send message' };\n    }\n}\n\nexport async function sendSticker(senderId: string, recipientId: string, stickerId: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'sticker',\n            stickerId,\n        });\n        return { error: null, data: { id: docRef.id, stickerId } };\n    } catch (error) {\n        console.error(\"Error sending sticker:\", error);\n        return { error: 'Failed to send sticker' };\n    }\n}\n\nexport async function sendGif(senderId: string, recipientId: string, gifUrl: string) {\n    const chatId = getChatId(senderId, recipientId);\n    \n    try {\n        const docRef = await addDoc(collection(db, 'chats', chatId, 'messages'), {\n            senderId,\n            recipientId,\n            text: '',\n            timestamp: serverTimestamp(),\n            type: 'gif',\n            gifUrl,\n        });\n        return { error: null, data: { id: docRef.id, gifUrl } };\n    } catch (error) {\n        console.error(\"Error sending GIF:\", error);\n        return { error: 'Failed to send GIF' };\n    }\n}\n\nexport async function searchGifs(query: string) {\n  const apiKey = process.env.GIPHY_API_KEY;\n  if (!apiKey) {\n    console.error('GIPHY API key not found.');\n    return { error: 'GIF service is not configured.' };\n  }\n  \n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURIComponent(query)}&limit=21&offset=0&rating=g&lang=en`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('GIPHY API error:', response.status, errorText);\n      return { error: 'Failed to fetch GIFs from GIPHY.' };\n    }\n    const data = await response.json();\n    const gifs = data.data.map((r: any) => ({\n      id: r.id,\n      url: r.images.fixed_height.url,\n      preview: r.images.fixed_height_small.url,\n    }));\n    return { data: gifs };\n  } catch (error) {\n    console.error('Error fetching GIFs from GIPHY:', error);\n    return { error: 'Failed to fetch GIFs.' };\n  }\n}\n\n\nexport async function editMessage(chatId: string, messageId: string, newText: string) {\n    if (!newText.trim()) {\n        return { error: \"Message can't be empty\" };\n    }\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await updateDoc(messageRef, {\n            text: newText,\n            edited: true,\n        });\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error editing message:\", error);\n        return { error: 'Failed to edit message' };\n    }\n}\n\nexport async function deleteMessage(chatId: string, messageId: string) {\n    try {\n        const messageRef = doc(db, 'chats', chatId, 'messages', messageId);\n        await deleteDoc(messageRef);\n        return { success: true };\n    } catch (error) {\n        console.error(\"Error deleting message:\", error);\n        return { error: 'Failed to delete message' };\n    }\n}\n\n\n// WebRTC Signaling Actions\nexport async function createCallOffer(chatId: string, offer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await setDoc(callDocRef, {\n    offer,\n    status: 'ringing',\n    createdAt: serverTimestamp(),\n  });\n}\n\nexport async function createCallAnswer(chatId: string, answer: RTCSessionDescriptionInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  await updateDoc(callDocRef, { answer, status: 'answered' });\n}\n\nexport async function addIceCandidate(chatId: string, candidate: RTCIceCandidateInit) {\n  const callDocRef = doc(db, 'calls', chatId);\n  const callDoc = await getDoc(callDocRef);\n  if (callDoc.exists()) {\n    const data = callDoc.data();\n    const candidates = data.iceCandidates || [];\n    await updateDoc(callDocRef, {\n      iceCandidates: [...candidates, candidate],\n    });\n  }\n}\n\nexport async function updateCallStatus(\n    chatId: string, \n    status: 'declined' | 'ended' | 'answered', \n    duration?: number,\n    callerId?: string,\n    calleeId?: string,\n) {\n    const callDocRef = doc(db, 'calls', chatId);\n    const callDoc = await getDoc(callDocRef);\n\n    if (callDoc.exists()) {\n        const callData = callDoc.data();\n        if (status === 'ended' || status === 'declined') {\n            await deleteDoc(callDocRef);\n            \n            if(callerId && calleeId) {\n                let callStatus = callData.status === 'answered' ? 'answered' : (status === 'declined' ? 'declined' : 'missed');\n                let messageText = 'Звонок';\n                 if(callStatus === 'answered') {\n                    messageText = `Звонок длительностью ${duration} сек.`\n                 } else if (callStatus === 'declined') {\n                    messageText = 'Звонок отклонен'\n                 } else if (callStatus === 'missed') {\n                    messageText = 'Пропущенный звонок'\n                 }\n\n                await sendMessage(callerId, calleeId, messageText, undefined, {\n                    status: callStatus,\n                    duration: duration,\n                })\n            }\n        }\n    } else if(status === 'answered') {\n        await setDoc(callDocRef, { status }, { merge: true });\n    }\n}\n"],"names":[],"mappings":";;;;;;IAiKsB,kBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 3524, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3601, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/call-view.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport type { User, CallState } from '@/lib/types';\nimport { Button } from '@/components/ui/button';\nimport { Phone, Mic, MicOff, Video, VideoOff, PhoneOff } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { useToast } from '@/hooks/use-toast';\nimport { createPeerConnection, hangUp } from '@/lib/webrtc';\nimport { createCallAnswer, updateCallStatus, createCallOffer } from '@/app/actions';\nimport { doc, onSnapshot } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport { Alert, AlertDescription, AlertTitle } from './ui/alert';\n\ninterface CallViewProps {\n  chatId: string;\n  currentUser: User;\n  chatPartner: User;\n  initialCallState: CallState | null;\n  onEndCall: () => void;\n}\n\nexport function CallView({ chatId, currentUser, chatPartner, initialCallState, onEndCall }: CallViewProps) {\n  const [localStream, setLocalStream] = useState<MediaStream | null>(null);\n  const [remoteStream, setRemoteStream] = useState<MediaStream | null>(null);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isVideoOff, setIsVideoOff] = useState(false);\n  const pcRef = useRef<RTCPeerConnection | null>(null);\n  const localVideoRef = useRef<HTMLVideoElement>(null);\n  const remoteVideoRef = useRef<HTMLVideoElement>(null);\n  const { toast } = useToast();\n  const [callStatus, setCallStatus] = useState(initialCallState?.status || 'calling');\n  const [isCallEnded, setIsCallEnded] = useState(false);\n  const [queuedCandidates, setQueuedCandidates] = useState<RTCIceCandidateInit[]>([]);\n  const [callStartTime, setCallStartTime] = useState<number | null>(null);\n\n\n  useEffect(() => {\n    const startMedia = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n        setLocalStream(stream);\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = stream;\n        }\n        return stream;\n      } catch (error) {\n        console.error(\"Error starting media:\", error);\n        toast({ title: \"Ошибка медиа\", description: \"Не удалось получить доступ к камере или микрофону.\", variant: \"destructive\"});\n        handleHangUp('declined');\n        return null;\n      }\n    };\n\n    const initializeCall = async (stream: MediaStream) => {\n        const { pc } = createPeerConnection(chatId, stream, setRemoteStream);\n        pcRef.current = pc;\n        \n        if (!initialCallState?.offer) {\n             const offer = await pc.createOffer();\n             await pc.setLocalDescription(offer);\n             await createCallOffer(chatId, offer);\n        }\n    };\n    \n    startMedia().then(stream => {\n      if (stream) {\n        initializeCall(stream);\n      }\n    });\n\n    return () => {\n        const pc = pcRef.current;\n        const ls = localStream;\n        hangUp(pc, ls, chatId, 0, currentUser.id, chatPartner.id);\n    };\n  }, [chatId, toast]);\n\n\n  useEffect(() => {\n    if (!pcRef.current) return;\n    \n    if (pcRef.current.remoteDescription && queuedCandidates.length > 0) {\n      queuedCandidates.forEach(candidate => {\n        if(pcRef.current) {\n            pcRef.current.addIceCandidate(new RTCIceCandidate(candidate)).catch(e => console.error(\"Error adding queued ICE candidate:\", e));\n        }\n      });\n      setQueuedCandidates([]);\n    }\n  }, [pcRef.current?.remoteDescription, queuedCandidates]);\n\n\n  useEffect(() => {\n    const callDocRef = doc(db, 'calls', chatId);\n    const unsubscribe = onSnapshot(callDocRef, async (snapshot) => {\n        const pc = pcRef.current;\n        if (!snapshot.exists()) {\n            setIsCallEnded(true);\n            setCallStatus('ended');\n            setTimeout(() => onEndCall(), 2000);\n            return;\n        }\n\n        const callData = snapshot.data() as CallState;\n        setCallStatus(callData.status);\n\n        if(callData.status === 'answered' && !callStartTime) {\n            setCallStartTime(Date.now());\n        }\n\n        if (!pc) return;\n        \n        const processCandidates = (candidates: RTCIceCandidateInit[]) => {\n            if (pc.remoteDescription) {\n                candidates.forEach(candidate => {\n                    if (candidate) pc.addIceCandidate(new RTCIceCandidate(candidate)).catch(e => console.error(\"Error adding ICE candidate\", e));\n                });\n            } else {\n                setQueuedCandidates(prev => [...prev, ...candidates]);\n            }\n        }\n\n        if (callData.offer && !pc.currentRemoteDescription && pc.signalingState !== 'stable') {\n          await pc.setRemoteDescription(new RTCSessionDescription(callData.offer));\n          const answer = await pc.createAnswer();\n          await pc.setLocalDescription(answer);\n          await createCallAnswer(chatId, answer);\n          await updateCallStatus(chatId, 'answered');\n        }\n\n        if (callData.answer && !pc.currentRemoteDescription && pc.signalingState === 'have-local-offer') {\n            await pc.setRemoteDescription(new RTCSessionDescription(callData.answer));\n        }\n\n        if (callData.iceCandidates) {\n             processCandidates(callData.iceCandidates);\n        }\n    });\n\n    return () => unsubscribe();\n\n  }, [chatId, onEndCall, callStartTime]);\n\n\n  const handleHangUp = (status: 'ended' | 'declined' = 'ended') => {\n      const duration = callStartTime ? Math.round((Date.now() - callStartTime) / 1000) : 0;\n      updateCallStatus(chatId, status, duration, currentUser.id, chatPartner.id);\n  };\n\n  const toggleMute = () => {\n    if (localStream) {\n      localStream.getAudioTracks().forEach(track => track.enabled = !track.enabled);\n      setIsMuted(!isMuted);\n    }\n  };\n\n  const toggleVideo = () => {\n     if (localStream) {\n      localStream.getVideoTracks().forEach(track => track.enabled = !track.enabled);\n      setIsVideoOff(!isVideoOff);\n    }\n  }\n\n  const renderCallStatus = () => {\n    if (isCallEnded) {\n        return (\n             <Alert className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-black/50 text-white border-0\">\n                <AlertTitle>Звонок завершен</AlertTitle>\n             </Alert>\n        )\n    }\n    if (callStatus === 'ringing') {\n        return (\n             <Alert className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-black/50 text-white border-0\">\n                <AlertTitle>Вызов {chatPartner.name}...</AlertTitle>\n             </Alert>\n        )\n    }\n    return null;\n  }\n\n  return (\n    <div className=\"relative flex flex-col h-full bg-black\">\n      <video\n        ref={remoteVideoRef}\n        autoPlay\n        playsInline\n        className={cn(\"w-full h-full object-cover\", {\"hidden\": !remoteStream})}\n      />\n       {!remoteStream && (\n        <div className=\"w-full h-full object-cover flex items-center justify-center\">\n            <div className=\"flex flex-col items-center gap-4\">\n                <p className=\"text-xl font-bold\">{chatPartner.name}</p>\n                {renderCallStatus()}\n            </div>\n        </div>\n      )}\n      <video\n        ref={localVideoRef}\n        autoPlay\n        playsInline\n        muted\n        className=\"absolute w-32 h-48 md:w-48 md:h-64 top-4 right-4 rounded-lg object-cover border-2 border-white\"\n      />\n      <div className=\"absolute bottom-0 left-0 right-0 p-4 bg-gradient-to-t from-black/70 to-transparent\">\n        <div className=\"flex justify-center items-center gap-4\">\n          <Button variant=\"secondary\" size=\"icon\" className=\"rounded-full h-14 w-14\" onClick={toggleMute}>\n            {isMuted ? <MicOff /> : <Mic />}\n          </Button>\n           <Button variant=\"secondary\" size=\"icon\" className=\"rounded-full h-14 w-14\" onClick={toggleVideo}>\n            {isVideoOff ? <VideoOff /> : <Video />}\n          </Button>\n          <Button variant=\"destructive\" size=\"icon\" className=\"rounded-full h-16 w-16\" onClick={() => handleHangUp()}>\n            <PhoneOff />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3988, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/chat-view.tsx"],"sourcesContent":["'use client';\nimport { useState, useEffect, useRef } from 'react';\nimport type { Message, User, CallState } from '@/lib/types';\nimport { allUsers } from '@/lib/data';\nimport { ChatHeader } from './chat-header';\nimport { ChatMessages } from './chat-messages';\nimport { ChatInput } from './chat-input';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from './ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useToast } from '@/hooks/use-toast';\nimport { sendMessage, sendSticker, editMessage, deleteMessage, sendGif, createCallOffer, updateCallStatus } from '@/app/actions';\nimport { db } from '@/lib/firebase';\nimport { collection, query, orderBy, onSnapshot, doc } from 'firebase/firestore';\nimport { ForwardMessageDialog } from './forward-message-dialog';\nimport { CallView } from './call-view';\n\nfunction getChatId(userId1: string, userId2: string) {\n    return [userId1, userId2].sort().join('_');\n}\ninterface ChatViewProps {\n  initialMessages: Message[];\n  currentUser: User;\n  chatPartner: User;\n  isMobile: boolean;\n  onBack: () => void;\n}\n\nexport function ChatView({\n  initialMessages,\n  currentUser,\n  chatPartner,\n  isMobile,\n  onBack,\n}: ChatViewProps) {\n  const [messages, setMessages] = useState(initialMessages);\n  const [editingMessage, setEditingMessage] = useState<Message | null>(null);\n  const [editedText, setEditedText] = useState('');\n  const [forwardingMessage, setForwardingMessage] = useState<Message | null>(null);\n  const [callState, setCallState] = useState<CallState | null>(null);\n  const [isCalling, setIsCalling] = useState(false);\n  const [isWindowFocused, setIsWindowFocused] = useState(true);\n  const { toast } = useToast();\n  \n  const chatId = getChatId(currentUser.id, chatPartner.id);\n  \n  useEffect(() => {\n    const handleFocus = () => setIsWindowFocused(true);\n    const handleBlur = () => setIsWindowFocused(false);\n\n    window.addEventListener('focus', handleFocus);\n    window.addEventListener('blur', handleBlur);\n\n    return () => {\n      window.removeEventListener('focus', handleFocus);\n      window.removeEventListener('blur', handleBlur);\n    };\n  }, []);\n  \n  useEffect(() => {\n    const q = query(collection(db, 'chats', chatId, 'messages'), orderBy('timestamp', 'asc'));\n\n    const unsubscribeMessages = onSnapshot(q, (querySnapshot) => {\n      const newMessages: Message[] = [];\n      let isInitialLoad = messages.length === 0;\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        const newMessage = {\n          id: doc.id,\n          ...data,\n          timestamp: data.timestamp?.toDate().getTime() || Date.now(),\n        } as Message;\n        newMessages.push(newMessage);\n        \n        // Show notification for new messages\n        if (!isInitialLoad && newMessage.senderId !== currentUser.id && !isWindowFocused && Notification.permission === 'granted') {\n             const sender = allUsers.find(u => u.id === newMessage.senderId);\n             const notificationText = newMessage.type === 'text' ? newMessage.text : (newMessage.type === 'sticker' ? 'Отправил(а) стикер' : 'Отправил(а) GIF');\n             new Notification(`Новое сообщение от ${sender?.name || 'Unknown'}`, {\n                body: notificationText,\n                icon: sender?.avatar\n             });\n        }\n      });\n      setMessages(newMessages);\n      isInitialLoad = false;\n    });\n\n    const callDocRef = doc(db, 'calls', chatId);\n    const unsubscribeCalls = onSnapshot(callDocRef, (doc) => {\n        const callData = doc.data() as CallState | null;\n        setCallState(callData);\n\n        // If there's an incoming call for us, start the call view\n        if (callData?.status === 'ringing' && callData?.offer) {\n            setIsCalling(true);\n        }\n    });\n\n    return () => {\n        unsubscribeMessages();\n        unsubscribeCalls();\n    }\n  }, [chatId, currentUser.id, isWindowFocused]);\n\n\n  const handleSendMessage = async (text: string) => {\n    const result = await sendMessage(currentUser.id, chatPartner.id, text);\n    if(result.error) {\n        toast({\n            title: \"Ошибка отправки\",\n            description: result.error,\n            variant: \"destructive\",\n        });\n    }\n  };\n\n  const handleSendSticker = async (stickerId: string) => {\n    await sendSticker(currentUser.id, chatPartner.id, stickerId);\n  };\n  \n  const handleSendGif = async (gifUrl: string) => {\n    await sendGif(currentUser.id, chatPartner.id, gifUrl);\n  };\n\n  const handleEdit = (message: Message) => {\n    setEditingMessage(message);\n    setEditedText(message.text);\n  };\n\n  const handleSaveEdit = async () => {\n    if (!editingMessage) return;\n\n    const result = await editMessage(chatId, editingMessage.id, editedText);\n    if(result.error){\n        toast({ title: \"Ошибка\", description: result.error, variant: 'destructive' });\n    }\n    setEditingMessage(null);\n    setEditedText('');\n  };\n\n  const handleDelete = async (messageId: string) => {\n     const result = await deleteMessage(chatId, messageId);\n     if(result.error){\n        toast({ title: \"Ошибка\", description: result.error, variant: 'destructive' });\n     }\n  };\n\n  const handleForward = (message: Message) => {\n    setForwardingMessage(message);\n  };\n\n  const handleConfirmForward = async (recipientId: string) => {\n    if (!forwardingMessage) return;\n    const sender = allUsers.find(u => u.id === forwardingMessage.senderId);\n    \n    await sendMessage(currentUser.id, recipientId, forwardingMessage.text, {\n      name: sender?.name || 'Unknown User',\n      text: forwardingMessage.text,\n    });\n    \n    toast({\n        title: \"Сообщение переслано\",\n        description: `Сообщение было успешно переслано.`,\n    })\n    setForwardingMessage(null);\n  }\n\n  const handleInitiateCall = () => {\n    // We set isCalling to true immediately for the caller\n    setIsCalling(true);\n  }\n  \n  const handleEndCall = () => {\n      setIsCalling(false);\n      setCallState(null); // Clear the call state locally\n  }\n\n  if (isCalling) {\n      return (\n          <CallView \n              chatId={chatId}\n              currentUser={currentUser}\n              chatPartner={chatPartner}\n              initialCallState={callState}\n              onEndCall={handleEndCall}\n          />\n      )\n  }\n\n  return (\n    <div className=\"flex flex-col h-full bg-background\">\n      <ChatHeader \n        user={chatPartner} \n        isMobile={isMobile} \n        onBack={onBack}\n        onCall={handleInitiateCall}\n      />\n      <ChatMessages\n        messages={messages}\n        currentUser={currentUser}\n        chatPartner={chatPartner}\n        onEdit={handleEdit}\n        onDelete={handleDelete}\n        onForward={handleForward}\n      />\n      <ChatInput \n        onSendMessage={handleSendMessage} \n        onSendSticker={handleSendSticker}\n        onSendGif={handleSendGif}\n       />\n\n      <Dialog open={!!editingMessage} onOpenChange={() => setEditingMessage(null)}>\n        <DialogContent>\n            <DialogHeader>\n                <DialogTitle>Редактировать сообщение</DialogTitle>\n            </DialogHeader>\n            <Input value={editedText} onChange={(e) => setEditedText(e.target.value)} />\n            <DialogFooter>\n                <Button variant=\"outline\" onClick={() => setEditingMessage(null)}>Отмена</Button>\n                <Button onClick={handleSaveEdit}>Сохранить</Button>\n            </DialogFooter>\n        </DialogContent>\n      </Dialog>\n      <ForwardMessageDialog\n        isOpen={!!forwardingMessage}\n        onClose={() => setForwardingMessage(null)}\n        onForward={handleConfirmForward}\n        currentUser={currentUser}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4329, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/messenger.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport type { User } from '@/lib/types';\nimport { useIsMobile } from '@/hooks/use-mobile';\nimport { cn } from '@/lib/utils';\nimport { ContactList } from './contact-list';\nimport { ChatView } from './chat-view';\nimport { PigeonIcon } from './icons';\nimport { db } from '@/lib/firebase';\nimport { collection, onSnapshot, doc, setDoc, serverTimestamp } from 'firebase/firestore';\n\ninterface MessengerProps {\n  currentUser: User;\n  onLogout: () => void;\n}\n\nexport function Messenger({ currentUser, onLogout }: MessengerProps) {\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const isMobile = useIsMobile();\n\n  useEffect(() => {\n    // Request notification permission on component mount\n    if ('Notification' in window && Notification.permission !== 'granted' && Notification.permission !== 'denied') {\n      Notification.requestPermission();\n    }\n\n    const unsubscribe = onSnapshot(collection(db, 'users'), (snapshot) => {\n      const usersData: User[] = [];\n      snapshot.forEach((doc) => {\n        if (doc.id !== currentUser.id) {\n          const data = doc.data();\n          usersData.push({\n            id: doc.id,\n            name: data.name,\n            avatar: data.avatar,\n            status: data.status,\n            phone: data.phone,\n            lastSeen: data.lastSeen?.toDate().getTime(),\n            isCreator: data.isCreator\n          });\n        }\n      });\n      // Ensure the creator is always at the top of the list\n      usersData.sort((a, b) => {\n        if (a.isCreator) return -1;\n        if (b.isCreator) return 1;\n        return 0;\n      })\n\n      setUsers(usersData);\n      if (usersData.length > 0) {\n        setSelectedUserId(currentSelectedId => currentSelectedId ?? usersData[0].id)\n      }\n      setIsLoading(false);\n    });\n\n    const handleBeforeUnload = (e: BeforeUnloadEvent) => {\n        if(currentUser) {\n            setDoc(doc(db, 'users', currentUser.id), { status: 'Offline', lastSeen: serverTimestamp() }, { merge: true });\n        }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n        unsubscribe();\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n    }\n  }, [currentUser.id]);\n  \n  const selectedUser = users.find((user) => user.id === selectedUserId);\n\n  const handleSelectUser = (userId: string) => {\n    setSelectedUserId(userId);\n  };\n  \n  const handleBack = () => {\n    setSelectedUserId(null);\n  }\n\n  return (\n    <main className=\"h-screen w-screen flex items-center justify-center p-0 md:p-4\">\n      <div className=\"h-full w-full max-w-7xl md:rounded-2xl shadow-2xl flex overflow-hidden border\">\n        <div\n          className={cn('w-full md:w-1/3 md:flex flex-col', {\n            'hidden md:flex': isMobile && selectedUserId,\n            'flex': !isMobile || !selectedUserId,\n          })}\n        >\n          <ContactList\n            users={users}\n            selectedUserId={selectedUserId}\n            onSelectUser={handleSelectUser}\n            onLogout={onLogout}\n            isLoading={isLoading}\n          />\n        </div>\n        <div\n          className={cn('w-full md:w-2/3 flex-col bg-background', {\n            'flex': selectedUserId,\n            'hidden md:flex': !selectedUserId,\n          })}\n        >\n          {selectedUser ? (\n            <ChatView\n              key={selectedUserId}\n              initialMessages={[]}\n              currentUser={currentUser}\n              chatPartner={selectedUser}\n              isMobile={isMobile}\n              onBack={handleBack}\n            />\n          ) : (\n            <div className=\"hidden md:flex flex-col items-center justify-center h-full gap-4 text-center\">\n                {isLoading ? (\n                    <p>Загрузка чатов...</p>\n                ) : (\n                    <>\n                        <PigeonIcon className=\"h-24 w-24 text-muted-foreground/50\" />\n                        <h2 className=\"text-2xl font-semibold\">Добро пожаловать в Go Messenger</h2>\n                        <p className=\"text-muted-foreground\">Выберите чат, чтобы начать общение.</p>\n                    </>\n                )}\n            </div>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4546, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/cookies.ts"],"sourcesContent":["\n'use client';\n\nexport function setCookie(name: string, value: string, days: number) {\n  let expires = \"\";\n  if (days) {\n    const date = new Date();\n    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n    expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\nexport function getCookie(name: string): string | null {\n  const nameEQ = name + \"=\";\n  const ca = document.cookie.split(';');\n  for(let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n  }\n  return null;\n}\n\nexport function removeCookie(name: string) {   \n  document.cookie = name+'=; Max-Age=-99999999;';  \n}\n"],"names":[],"mappings":";;;;;AACA;AAEO,SAAS,UAAU,IAAY,EAAE,KAAa,EAAE,IAAY;IACjE,IAAI,UAAU;IACd,IAAI,MAAM;QACR,MAAM,OAAO,IAAI;QACjB,KAAK,OAAO,CAAC,KAAK,OAAO,KAAM,OAAO,KAAK,KAAK,KAAK;QACrD,UAAU,eAAe,KAAK,WAAW;IAC3C;IACA,SAAS,MAAM,GAAG,OAAO,MAAM,CAAC,SAAS,EAAE,IAAK,UAAU;AAC5D;AAEO,SAAS,UAAU,IAAY;IACpC,MAAM,SAAS,OAAO;IACtB,MAAM,KAAK,SAAS,MAAM,CAAC,KAAK,CAAC;IACjC,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,MAAM,EAAE,IAAK;QACjC,IAAI,IAAI,EAAE,CAAC,EAAE;QACb,MAAO,EAAE,MAAM,CAAC,OAAO,IAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,MAAM;QACvD,IAAI,EAAE,OAAO,CAAC,YAAY,GAAG,OAAO,EAAE,SAAS,CAAC,OAAO,MAAM,EAAE,EAAE,MAAM;IACzE;IACA,OAAO;AACT;AAEO,SAAS,aAAa,IAAY;IACvC,SAAS,MAAM,GAAG,OAAK;AACzB","debugId":null}},
    {"offset": {"line": 4583, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/login.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { allUsers } from '@/lib/data';\nimport { Messenger } from './messenger';\nimport { PigeonIcon } from './icons';\nimport { useToast } from '@/hooks/use-toast';\nimport type { User } from '@/lib/types';\nimport { db } from '@/lib/firebase';\nimport { doc, setDoc, serverTimestamp, getDoc } from 'firebase/firestore';\nimport { getCookie, setCookie, removeCookie } from '@/lib/cookies';\n\nconst LOGGED_IN_USER_COOKIE = 'loggedInUserId';\n\nexport function Login() {\n  const [phone, setPhone] = useState('');\n  const [password, setPassword] = useState('');\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const checkLoggedInUser = async () => {\n      try {\n        const userId = getCookie(LOGGED_IN_USER_COOKIE);\n        if (userId) {\n          const user = allUsers.find((u) => u.id === userId);\n          if (user) {\n            await setDoc(doc(db, 'users', user.id), {\n              status: 'Online',\n              lastSeen: serverTimestamp()\n            }, { merge: true });\n            setCurrentUser(user);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error checking logged in user:\", error);\n        // If there's an error (e.g. offline), we still want to stop loading\n        // and show the login page. The user can try logging in manually.\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkLoggedInUser();\n  }, []);\n\n  const handleLogin = async () => {\n    const user = allUsers.find(\n      (u) => u.phone === phone && u.password === password\n    );\n    if (user) {\n        // Initialize all users in Firestore if they don't exist\n        for (const u of allUsers) {\n            const userDocRef = doc(db, 'users', u.id);\n            const userDoc = await getDoc(userDocRef);\n            if (!userDoc.exists()) {\n                await setDoc(userDocRef, {\n                    ...u,\n                    status: 'Offline',\n                    lastSeen: serverTimestamp()\n                });\n            }\n        }\n        \n      await setDoc(doc(db, 'users', user.id), {\n        status: 'Online',\n        lastSeen: serverTimestamp()\n      }, { merge: true });\n\n      setCookie(LOGGED_IN_USER_COOKIE, user.id, 7); // Save cookie for 7 days\n      setCurrentUser(user);\n    } else {\n      toast({\n        title: 'Ошибка входа',\n        description: 'Неверный номер телефона или пароль.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const handleLogout = async () => {\n    if(currentUser) {\n        await setDoc(doc(db, 'users', currentUser.id), {\n            status: 'Offline',\n            lastSeen: serverTimestamp()\n        }, { merge: true });\n    }\n    removeCookie(LOGGED_IN_USER_COOKIE);\n    setCurrentUser(null);\n    setPhone('');\n    setPassword('');\n  };\n\n  if (isLoading) {\n    // You can return a loading spinner here\n    return (\n        <div className=\"flex items-center justify-center min-h-screen bg-background\">\n            <p>Loading...</p>\n        </div>\n    );\n  }\n\n\n  if (currentUser) {\n    return <Messenger currentUser={currentUser} onLogout={handleLogout} />;\n  }\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-background\">\n      <div className=\"w-full max-w-md p-8 space-y-6 bg-card rounded-lg shadow-lg\">\n        <div className=\"flex flex-col items-center space-y-2\">\n           <PigeonIcon className=\"h-12 w-12 text-primary\" />\n          <h1 className=\"text-2xl font-bold text-center\">Go Messenger</h1>\n          <p className=\"text-muted-foreground\">Войдите в свой аккаунт</p>\n        </div>\n        <div className=\"space-y-4\">\n          <div>\n            <Label htmlFor=\"phone\">Номер телефона</Label>\n            <Input\n              id=\"phone\"\n              type=\"tel\"\n              placeholder=\"79123456789\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n              required\n            />\n          </div>\n          <div>\n            <Label htmlFor=\"password\">Пароль</Label>\n            <Input\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n        </div>\n        <Button onClick={handleLogin} className=\"w-full\">\n          Войти\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}